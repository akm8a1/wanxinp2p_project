[transaction-service][53060] 2022-07-10 23:05:48,365 INFO [main][DefaultApplicationProvider.java:85] - App ID is set to transaction-service by app.id property from System Property
[transaction-service][53060] 2022-07-10 23:05:48,374 INFO [main][DefaultServerProvider.java:108] - Environment is set to [dev] by JVM system property 'env'.
[transaction-service][53060] 2022-07-10 23:05:48,441 WARN [main][DefaultMetaServerProvider.java:39] - Could not find meta server address, because it is not available in neither (1) JVM system property 'apollo.meta', (2) OS env variable 'APOLLO_META' (3) property 'apollo.meta' from server.properties nor (4) property 'apollo.meta' from app.properties
[transaction-service][53060] 2022-07-10 23:05:48,448 INFO [main][MetaDomainConsts.java:93] - Located meta server address http://localhost:8080 for env DEV from com.ctrip.framework.apollo.core.internals.LegacyMetaServerProvider
[transaction-service][53060] 2022-07-10 23:05:50,324 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 23:05:51,344 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1 [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 23:05:51,352 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 23:05:52,375 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 23:05:52,383 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 23:05:53,405 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 23:05:54,428 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 23:05:54,437 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 23:05:55,458 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 23:05:55,459 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\transaction-service\config-cache\transaction-service+DEFAULT+micro_service.spring-cloud-feign.properties]
[transaction-service][53060] 2022-07-10 23:05:55,467 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 23:05:56,476 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 23:05:56,477 WARN [main][DefaultConfig.java:61] - Init Apollo Local Config failed - namespace: micro_service.spring-cloud-feign, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\transaction-service\config-cache\transaction-service+DEFAULT+micro_service.spring-cloud-feign.properties].
[transaction-service][53060] 2022-07-10 23:05:56,519 WARN [main][DefaultConfig.java:95] - Could not load config for namespace micro_service.spring-cloud-feign from Apollo, please check whether the configs are released in Apollo! Return default value now!
[transaction-service][53060] 2022-07-10 23:05:56,520 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[transaction-service][53060] 2022-07-10 23:05:58,818 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[transaction-service][53060] 2022-07-10 23:05:59,185 INFO [main][GenericScope.java:294] - BeanFactory id=abd3f24e-aec8-3cc6-849a-f7f4787b54d3
[transaction-service][53060] 2022-07-10 23:05:59,260 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.liu.wanxinp2p.transaction.agent.ConsumerServiceAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:05:59,263 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.liu.wanxinp2p.transaction.agent.ContentSearchApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:05:59,265 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.liu.wanxinp2p.transaction.agent.DepositoryAgentService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:05:59,303 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration$$EnhancerBySpringCGLIB$$e134a5b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:05:59,323 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketmq-org.apache.rocketmq.spring.autoconfigure.RocketMQProperties' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:01,647 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'defaultMQProducer' of type [org.apache.rocketmq.client.producer.DefaultMQProducer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:01,653 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$14321646] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:01,661 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$c67ed85f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:01,666 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$8195be4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:01,674 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:01,677 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:01,684 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$a861357c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:01,693 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:01,696 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$f63db3d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:01,768 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:01,770 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:01,782 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:01,789 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:01,832 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:08,073 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketMQTemplate' of type [org.apache.rocketmq.spring.core.RocketMQTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:08,076 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'transactionHandlerRegistry' of type [org.apache.rocketmq.spring.config.TransactionHandlerRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:08,206 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b89e96b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:08,260 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d4b899b2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 23:06:08,948 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 53060 (http)
[transaction-service][53060] 2022-07-10 23:06:08,975 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-53060"]
[transaction-service][53060] 2022-07-10 23:06:08,989 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[transaction-service][53060] 2022-07-10 23:06:08,990 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[transaction-service][53060] 2022-07-10 23:06:09,005 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\jdk1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;E:\Ruby26-x64\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\VanDyke Software\Clients\;E:\Anaconda;E:\Anaconda\Library\mingw-w64\bin;E:\Anaconda\Library\usr\bin;E:\Anaconda\Library\bin;E:\Anaconda\Scripts;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;E:\mysql-5.7.20-winx64\bin;C:\Program Files\dotnet\;E:\nodejs\;C:\Users\Administrator\AppData\Roaming\npm;E:\nodejs\node_global\;C:\Program Files (x86)\Common Files\Thunder Network\KanKan\Codecs;E:\spark-2.1.1-hadoop2.7\bin;D:\Android\Sdk\platform-tools;E:\TortoiseSVN\bin;E:\TortoiseSVN\bin;E:\Subversion\bin;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;E:\CMake\bin;C:\mingw64\bin;E:\scala-2.12.15\bin;C:\Program Files (x86)\scala\bin;E:\spark\bin;E:\spark-2.1.1-hadoop2.7\bin;E:\NetSarang\Xshell 7\;E:\NetSarang\Xftp 7\;C:\Program Files\Git\cmd;E:\apache-maven-3.6.3\bin;E:\jdk1.8.0_161\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;E:\IntelliJ IDEA\bin;;C:\Users\Administrator\AppData\Roaming\npm;E:\nodejs\node_global\;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Microsoft VS Code\bin;.]
[transaction-service][53060] 2022-07-10 23:06:09,323 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[transaction-service][53060] 2022-07-10 23:06:09,324 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 12778 ms
[transaction-service][53060] 2022-07-10 23:06:09,606 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[transaction-service][53060] 2022-07-10 23:06:09,608 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[transaction-service][53060] 2022-07-10 23:06:09,648 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@2321e482
[transaction-service][53060] 2022-07-10 23:06:10,939 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[transaction-service][53060] 2022-07-10 23:06:11,172 INFO [main][DruidDataSource.java:1002] - {dataSource-2} inited
[transaction-service][53060] 2022-07-10 23:06:17,631 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[transaction-service][53060] 2022-07-10 23:06:17,780 INFO [main][PropertySourcedRequestMappingHandlerMapping.java:69] - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[transaction-service][53060] 2022-07-10 23:06:17,793 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[transaction-service][53060] 2022-07-10 23:06:17,794 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[transaction-service][53060] 2022-07-10 23:06:17,995 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[transaction-service][53060] 2022-07-10 23:06:24,113 INFO [main][InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
[transaction-service][53060] 2022-07-10 23:06:24,209 INFO [main][DiscoveryClient.java:349] - Initializing Eureka in region us-east-1
[transaction-service][53060] 2022-07-10 23:06:27,185 INFO [main][DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
[transaction-service][53060] 2022-07-10 23:06:27,186 INFO [main][DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
[transaction-service][53060] 2022-07-10 23:06:27,630 INFO [main][DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
[transaction-service][53060] 2022-07-10 23:06:27,630 INFO [main][DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
[transaction-service][53060] 2022-07-10 23:06:28,002 INFO [main][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[transaction-service][53060] 2022-07-10 23:06:29,263 INFO [main][DiscoveryClient.java:958] - Disable delta property : false
[transaction-service][53060] 2022-07-10 23:06:29,264 INFO [main][DiscoveryClient.java:959] - Single vip registry refresh property : null
[transaction-service][53060] 2022-07-10 23:06:29,264 INFO [main][DiscoveryClient.java:960] - Force full registry fetch : false
[transaction-service][53060] 2022-07-10 23:06:29,264 INFO [main][DiscoveryClient.java:961] - Application is null : false
[transaction-service][53060] 2022-07-10 23:06:29,264 INFO [main][DiscoveryClient.java:962] - Registered Applications size is zero : true
[transaction-service][53060] 2022-07-10 23:06:29,264 INFO [main][DiscoveryClient.java:964] - Application version is -1: true
[transaction-service][53060] 2022-07-10 23:06:29,265 INFO [main][DiscoveryClient.java:1047] - Getting all instance registry info from the eureka server
[transaction-service][53060] 2022-07-10 23:06:29,617 INFO [main][DiscoveryClient.java:1056] - The response status is 200
[transaction-service][53060] 2022-07-10 23:06:29,626 INFO [main][DiscoveryClient.java:1270] - Starting heartbeat executor: renew interval is: 30
[transaction-service][53060] 2022-07-10 23:06:29,634 INFO [main][InstanceInfoReplicator.java:60] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[transaction-service][53060] 2022-07-10 23:06:29,644 INFO [main][DiscoveryClient.java:449] - Discovery Client initialized at timestamp 1657465589641 with initial instances count: 8
[transaction-service][53060] 2022-07-10 23:06:29,648 INFO [main][EurekaServiceRegistry.java:42] - Registering application TRANSACTION-SERVICE with eureka with status UP
[transaction-service][53060] 2022-07-10 23:06:29,649 INFO [main][DiscoveryClient.java:1305] - Saw local status change event StatusChangeEvent [timestamp=1657465589649, current=UP, previous=STARTING]
[transaction-service][53060] 2022-07-10 23:06:29,654 INFO [main][DocumentationPluginsBootstrapper.java:160] - Context refreshed
[transaction-service][53060] 2022-07-10 23:06:29,655 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:192.168.1.4:53060: registering service...
[transaction-service][53060] 2022-07-10 23:06:29,683 INFO [main][DocumentationPluginsBootstrapper.java:163] - Found 1 custom documentation plugin(s)
[transaction-service][53060] 2022-07-10 23:06:29,727 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:192.168.1.4:53060 - registration status: 204
[transaction-service][53060] 2022-07-10 23:06:29,773 INFO [main][ApiListingReferenceScanner.java:41] - Scanning for api listing references
[transaction-service][53060] 2022-07-10 23:06:29,997 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: handleUsingGET_1
[transaction-service][53060] 2022-07-10 23:06:30,000 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: handleUsingGET_2
[transaction-service][53060] 2022-07-10 23:06:30,002 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: handleUsingGET_3
[transaction-service][53060] 2022-07-10 23:06:30,151 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: queryProjectsUsingPOST_1
[transaction-service][53060] 2022-07-10 23:06:30,267 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-53060"]
[transaction-service][53060] 2022-07-10 23:06:30,330 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 53060 (http) with context path '/transaction'
[transaction-service][53060] 2022-07-10 23:06:30,333 INFO [main][EurekaAutoServiceRegistration.java:141] - Updating port to 53060
[transaction-service][53060] 2022-07-10 23:06:30,340 INFO [main][StartupInfoLogger.java:59] - Started TransactionService in 48.425 seconds (JVM running for 54.152)
[transaction-service][53060] 2022-07-10 23:06:30,810 INFO [RMI TCP Connection(2)-172.26.144.1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[transaction-service][53060] 2022-07-10 23:06:30,811 INFO [RMI TCP Connection(2)-172.26.144.1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[transaction-service][53060] 2022-07-10 23:06:30,840 INFO [RMI TCP Connection(2)-172.26.144.1][FrameworkServlet.java:546] - Completed initialization in 29 ms
[transaction-service][53060] 2022-07-10 23:06:33,654 INFO [RMI TCP Connection(1)-172.26.144.1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:06:33,655 INFO [RMI TCP Connection(1)-172.26.144.1][SQLLogger.java:89] - Logic SQL: /* ping */ SELECT 1
[transaction-service][53060] 2022-07-10 23:06:33,655 INFO [RMI TCP Connection(1)-172.26.144.1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[], parametersIndex=0, logicSQL=/* ping */ SELECT 1)), containStar=false, firstSelectItemStartIndex=18, selectListStopIndex=18, groupByLastIndex=0, items=[CommonSelectItem(expression=1, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:06:33,656 INFO [RMI TCP Connection(1)-172.26.144.1][SQLLogger.java:89] - Actual SQL: ds0 ::: /* ping */ SELECT 1
[transaction-service][53060] 2022-07-10 23:10:06,924 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=? 
[transaction-service][53060] 2022-07-10 23:10:06,959 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: 1546109979008921602(Long)
[transaction-service][53060] 2022-07-10 23:10:07,151 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:10:07,152 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=?
[transaction-service][53060] 2022-07-10 23:10:07,152 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=216, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:10:07,153 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project_0 WHERE ID=? ::: [1546109979008921602]
[transaction-service][53060] 2022-07-10 23:10:07,154 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project_0 WHERE ID=? ::: [1546109979008921602]
[transaction-service][53060] 2022-07-10 23:10:07,224 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:10:07,313 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE FROM tender WHERE PROJECT_ID = ? 
[transaction-service][53060] 2022-07-10 23:10:07,318 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: 1546109979008921602(Long)
[transaction-service][53060] 2022-07-10 23:10:07,353 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:10:07,353 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender 
 
 WHERE PROJECT_ID = ?
[transaction-service][53060] 2022-07-10 23:10:07,354 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender 
 
 WHERE PROJECT_ID = ?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=168, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_USERNAME, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_ID, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=TENDER_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NAME, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_PERIOD, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_ANNUAL_RATE, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:10:07,354 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender_0 
 
 WHERE PROJECT_ID = ? ::: [1546109979008921602]
[transaction-service][53060] 2022-07-10 23:10:07,355 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender_0 
 
 WHERE PROJECT_ID = ? ::: [1546109979008921602]
[transaction-service][53060] 2022-07-10 23:10:07,366 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:10:07,399 WARN [http-nio-53060-exec-1][DefaultConfig.java:95] - Could not load config for namespace micro_service.spring-cloud-feign from Apollo, please check whether the configs are released in Apollo! Return default value now!
[transaction-service][53060] 2022-07-10 23:10:07,725 INFO [http-nio-53060-exec-1][ChainedDynamicProperty.java:115] - Flipping property: depository-agent-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[transaction-service][53060] 2022-07-10 23:10:07,757 INFO [http-nio-53060-exec-1][ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-depository-agent-service
[transaction-service][53060] 2022-07-10 23:10:07,758 INFO [http-nio-53060-exec-1][BaseLoadBalancer.java:197] - Client: depository-agent-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=depository-agent-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[transaction-service][53060] 2022-07-10 23:10:07,802 INFO [http-nio-53060-exec-1][DynamicServerListLoadBalancer.java:222] - Using serverListUpdater PollingServerListUpdater
[transaction-service][53060] 2022-07-10 23:10:07,823 INFO [http-nio-53060-exec-1][ChainedDynamicProperty.java:115] - Flipping property: depository-agent-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[transaction-service][53060] 2022-07-10 23:10:07,826 INFO [http-nio-53060-exec-1][DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client depository-agent-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=depository-agent-service,current list of Servers=[192.168.1.4:53070],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.4:53070;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5d31ce74
[transaction-service][53060] 2022-07-10 23:10:08,815 INFO [PollingServerListUpdater-0][ChainedDynamicProperty.java:115] - Flipping property: depository-agent-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[transaction-service][53060] 2022-07-10 23:10:09,805 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE tender SET CONSUMER_ID=?, CONSUMER_USERNAME=?, USER_NO=?, PROJECT_ID=?, PROJECT_NO=?, AMOUNT=?, TENDER_STATUS=?, CREATE_DATE=?, REQUEST_NO=?, STATUS=?, PROJECT_PERIOD=?, PROJECT_ANNUAL_RATE=? WHERE ID=? 
[transaction-service][53060] 2022-07-10 23:10:09,809 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: 1001(Long), 15378791981(String), USR_3525C3F56E36416B9FA7696619E2F96Y(String), 1546109979008921602(Long), 令狐泽银先生第2次借款(String), 6000(BigDecimal), LOAN(String), 2022-07-10 20:33:38.0(Timestamp), REQ_6231805C2F9B48AF885472C26E77272B(String), 1(Integer), 180(Integer), 0.00(BigDecimal), 1546110394077245442(Long)
[transaction-service][53060] 2022-07-10 23:10:09,836 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:10:09,837 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?
[transaction-service][53060] 2022-07-10 23:10:09,837 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=13, logicSQL=UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?), deleteStatement=false, updateTableAlias={tender=tender}, updateColumnValues={Column(name=CONSUMER_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4e32356d, Column(name=CONSUMER_USERNAME, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@49141222, Column(name=USER_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@313e29af, Column(name=PROJECT_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@76f6cbe7, Column(name=PROJECT_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@29b01109, Column(name=AMOUNT, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@40dc931f, Column(name=TENDER_STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@efa9fa, Column(name=CREATE_DATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4006e3f3, Column(name=REQUEST_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@69979aa3, Column(name=STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4df7b8e5, Column(name=PROJECT_PERIOD, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@30aa68d8, Column(name=PROJECT_ANNUAL_RATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@47441c45}, whereStartIndex=202, whereStopIndex=211, whereParameterStartIndex=12, whereParameterEndIndex=12)
[transaction-service][53060] 2022-07-10 23:10:09,838 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1001, 15378791981, USR_3525C3F56E36416B9FA7696619E2F96Y, 1546109979008921602, 令狐泽银先生第2次借款, 6000, LOAN, 2022-07-10T20:33:38.000+0800, REQ_6231805C2F9B48AF885472C26E77272B, 1, 180, 0.00, 1546110394077245442]
[transaction-service][53060] 2022-07-10 23:10:09,838 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1001, 15378791981, USR_3525C3F56E36416B9FA7696619E2F96Y, 1546109979008921602, 令狐泽银先生第2次借款, 6000, LOAN, 2022-07-10T20:33:38.000+0800, REQ_6231805C2F9B48AF885472C26E77272B, 1, 180, 0.00, 1546110394077245442]
[transaction-service][53060] 2022-07-10 23:10:09,839 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1001, 15378791981, USR_3525C3F56E36416B9FA7696619E2F96Y, 1546109979008921602, 令狐泽银先生第2次借款, 6000, LOAN, 2022-07-10T20:33:38.000+0800, REQ_6231805C2F9B48AF885472C26E77272B, 1, 180, 0.00, 1546110394077245442]
[transaction-service][53060] 2022-07-10 23:10:09,839 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1001, 15378791981, USR_3525C3F56E36416B9FA7696619E2F96Y, 1546109979008921602, 令狐泽银先生第2次借款, 6000, LOAN, 2022-07-10T20:33:38.000+0800, REQ_6231805C2F9B48AF885472C26E77272B, 1, 180, 0.00, 1546110394077245442]
[transaction-service][53060] 2022-07-10 23:10:09,856 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - <==    Updates: 1
[transaction-service][53060] 2022-07-10 23:10:09,934 WARN [http-nio-53060-exec-1][ProjectServiceImpl.java:422] - 审核满标放款失败!标的ID为:1546109979008921602,存管代理服务返回的状态为:00000
[transaction-service][53060] 2022-07-10 23:10:51,356 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 23:10:52,364 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 23:11:29,283 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[transaction-service][53060] 2022-07-10 23:15:51,360 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 23:15:52,378 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 23:16:29,299 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[transaction-service][53060] 2022-07-10 23:20:51,353 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 23:20:52,372 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 23:21:29,310 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[transaction-service][53060] 2022-07-10 23:25:51,361 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 23:25:52,372 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 23:26:29,313 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[transaction-service][53060] 2022-07-10 23:30:51,363 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 23:30:52,384 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 23:31:29,329 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[transaction-service][53060] 2022-07-10 23:34:31,042 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=? 
[transaction-service][53060] 2022-07-10 23:34:31,045 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==> Parameters: 1546109979008921602(Long)
[transaction-service][53060] 2022-07-10 23:34:31,046 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:34:31,047 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Logic SQL: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=?
[transaction-service][53060] 2022-07-10 23:34:31,048 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=216, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:34:31,049 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project_0 WHERE ID=? ::: [1546109979008921602]
[transaction-service][53060] 2022-07-10 23:34:31,050 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project_0 WHERE ID=? ::: [1546109979008921602]
[transaction-service][53060] 2022-07-10 23:34:31,069 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:34:31,072 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE FROM tender WHERE PROJECT_ID = ? 
[transaction-service][53060] 2022-07-10 23:34:31,075 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==> Parameters: 1546109979008921602(Long)
[transaction-service][53060] 2022-07-10 23:34:31,076 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:34:31,077 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender 
 
 WHERE PROJECT_ID = ?
[transaction-service][53060] 2022-07-10 23:34:31,077 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender 
 
 WHERE PROJECT_ID = ?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=168, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_USERNAME, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_ID, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=TENDER_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NAME, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_PERIOD, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_ANNUAL_RATE, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:34:31,077 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender_0 
 
 WHERE PROJECT_ID = ? ::: [1546109979008921602]
[transaction-service][53060] 2022-07-10 23:34:31,078 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender_0 
 
 WHERE PROJECT_ID = ? ::: [1546109979008921602]
[transaction-service][53060] 2022-07-10 23:34:31,083 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:34:33,217 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE tender SET CONSUMER_ID=?, CONSUMER_USERNAME=?, USER_NO=?, PROJECT_ID=?, PROJECT_NO=?, AMOUNT=?, TENDER_STATUS=?, CREATE_DATE=?, REQUEST_NO=?, STATUS=?, PROJECT_PERIOD=?, PROJECT_ANNUAL_RATE=? WHERE ID=? 
[transaction-service][53060] 2022-07-10 23:34:33,221 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==> Parameters: 1001(Long), 15378791981(String), USR_3525C3F56E36416B9FA7696619E2F96Y(String), 1546109979008921602(Long), 令狐泽银先生第2次借款(String), 6000(BigDecimal), LOAN(String), 2022-07-10 20:33:38.0(Timestamp), REQ_6231805C2F9B48AF885472C26E77272B(String), 1(Integer), 180(Integer), 0.00(BigDecimal), 1546110394077245442(Long)
[transaction-service][53060] 2022-07-10 23:34:33,222 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:34:33,223 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Logic SQL: UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?
[transaction-service][53060] 2022-07-10 23:34:33,224 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=13, logicSQL=UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?), deleteStatement=false, updateTableAlias={tender=tender}, updateColumnValues={Column(name=CONSUMER_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4e32356d, Column(name=CONSUMER_USERNAME, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@49141222, Column(name=USER_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@313e29af, Column(name=PROJECT_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@76f6cbe7, Column(name=PROJECT_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@29b01109, Column(name=AMOUNT, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@40dc931f, Column(name=TENDER_STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@efa9fa, Column(name=CREATE_DATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4006e3f3, Column(name=REQUEST_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@69979aa3, Column(name=STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4df7b8e5, Column(name=PROJECT_PERIOD, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@30aa68d8, Column(name=PROJECT_ANNUAL_RATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@47441c45}, whereStartIndex=202, whereStopIndex=211, whereParameterStartIndex=12, whereParameterEndIndex=12)
[transaction-service][53060] 2022-07-10 23:34:33,224 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1001, 15378791981, USR_3525C3F56E36416B9FA7696619E2F96Y, 1546109979008921602, 令狐泽银先生第2次借款, 6000, LOAN, 2022-07-10T20:33:38.000+0800, REQ_6231805C2F9B48AF885472C26E77272B, 1, 180, 0.00, 1546110394077245442]
[transaction-service][53060] 2022-07-10 23:34:33,225 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1001, 15378791981, USR_3525C3F56E36416B9FA7696619E2F96Y, 1546109979008921602, 令狐泽银先生第2次借款, 6000, LOAN, 2022-07-10T20:33:38.000+0800, REQ_6231805C2F9B48AF885472C26E77272B, 1, 180, 0.00, 1546110394077245442]
[transaction-service][53060] 2022-07-10 23:34:33,226 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1001, 15378791981, USR_3525C3F56E36416B9FA7696619E2F96Y, 1546109979008921602, 令狐泽银先生第2次借款, 6000, LOAN, 2022-07-10T20:33:38.000+0800, REQ_6231805C2F9B48AF885472C26E77272B, 1, 180, 0.00, 1546110394077245442]
[transaction-service][53060] 2022-07-10 23:34:33,227 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1001, 15378791981, USR_3525C3F56E36416B9FA7696619E2F96Y, 1546109979008921602, 令狐泽银先生第2次借款, 6000, LOAN, 2022-07-10T20:33:38.000+0800, REQ_6231805C2F9B48AF885472C26E77272B, 1, 180, 0.00, 1546110394077245442]
[transaction-service][53060] 2022-07-10 23:34:33,237 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - <==    Updates: 1
[transaction-service][53060] 2022-07-10 23:34:33,381 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE project SET CONSUMER_ID=?, USER_NO=?, PROJECT_NO=?, NAME=?, DESCRIPTION=?, TYPE=?, PERIOD=?, ANNUAL_RATE=?, BORROWER_ANNUAL_RATE=?, COMMISSION_ANNUAL_RATE=?, REPAYMENT_WAY=?, AMOUNT=?, PROJECT_STATUS=?, CREATE_DATE=?, STATUS=?, IS_ASSIGNMENT=?, REQUEST_NO=?, MODIFY_DATE=? WHERE ID=? 
[transaction-service][53060] 2022-07-10 23:34:33,389 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==> Parameters: 1004(Long), USR_3525C3F56E36416B9FA7696619E2F05P(String), PRO_AE02C35BE3874676ABE7239E26B13F37(String), 令狐泽银先生第2次借款(String), 个人生活消费(String), NEW(String), 180(Integer), 0.00(BigDecimal), 0.05(BigDecimal), 0.05(BigDecimal), FIXED_REPAYMENT(String), 6000.00(BigDecimal), REPAYING(String), 2022-07-10 20:31:58.0(Timestamp), 1(Integer), 0(Integer), REQ_AFBC5163EBAE43A8BB03C6EF5A9FCFE6(String), 2022-07-10 20:33:38.0(Timestamp), 1546109979008921602(Long)
[transaction-service][53060] 2022-07-10 23:34:33,406 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:34:33,407 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Logic SQL: UPDATE project  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=?
[transaction-service][53060] 2022-07-10 23:34:33,408 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=18})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=19, logicSQL=UPDATE project  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=?), deleteStatement=false, updateTableAlias={project=project}, updateColumnValues={Column(name=CONSUMER_ID, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@418a6971, Column(name=USER_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@bbbbe92, Column(name=PROJECT_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2a7c8657, Column(name=NAME, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1d74afc8, Column(name=DESCRIPTION, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@fa79cf6, Column(name=TYPE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@59beecbe, Column(name=PERIOD, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@17be87e0, Column(name=ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2f8c7030, Column(name=BORROWER_ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1c7f091b, Column(name=COMMISSION_ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@328acd36, Column(name=REPAYMENT_WAY, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5168cd00, Column(name=AMOUNT, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1da93aed, Column(name=PROJECT_STATUS, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@797acf92, Column(name=CREATE_DATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1dfd5ef6, Column(name=STATUS, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@aea9084, Column(name=IS_ASSIGNMENT, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5e40bd66, Column(name=REQUEST_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@71e9ff63, Column(name=MODIFY_DATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@6141546}, whereStartIndex=282, whereStopIndex=291, whereParameterStartIndex=18, whereParameterEndIndex=18)
[transaction-service][53060] 2022-07-10 23:34:33,410 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE project_0  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=? ::: [1004, USR_3525C3F56E36416B9FA7696619E2F05P, PRO_AE02C35BE3874676ABE7239E26B13F37, 令狐泽银先生第2次借款, 个人生活消费, NEW, 180, 0.00, 0.05, 0.05, FIXED_REPAYMENT, 6000.00, REPAYING, 2022-07-10T20:31:58.000+0800, 1, 0, REQ_AFBC5163EBAE43A8BB03C6EF5A9FCFE6, 2022-07-10T20:33:38.000+0800, 1546109979008921602]
[transaction-service][53060] 2022-07-10 23:34:33,411 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE project_0  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=? ::: [1004, USR_3525C3F56E36416B9FA7696619E2F05P, PRO_AE02C35BE3874676ABE7239E26B13F37, 令狐泽银先生第2次借款, 个人生活消费, NEW, 180, 0.00, 0.05, 0.05, FIXED_REPAYMENT, 6000.00, REPAYING, 2022-07-10T20:31:58.000+0800, 1, 0, REQ_AFBC5163EBAE43A8BB03C6EF5A9FCFE6, 2022-07-10T20:33:38.000+0800, 1546109979008921602]
[transaction-service][53060] 2022-07-10 23:34:33,421 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - <==    Updates: 1
[transaction-service][53060] 2022-07-10 23:34:35,017 INFO [http-nio-53060-exec-5][P2PTransactionListenerImpl.java:39] - 满标放款执行本地事务:将项目状态更新为REPAYING
[transaction-service][53060] 2022-07-10 23:34:35,028 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE project SET CONSUMER_ID=?, USER_NO=?, PROJECT_NO=?, NAME=?, DESCRIPTION=?, TYPE=?, PERIOD=?, ANNUAL_RATE=?, BORROWER_ANNUAL_RATE=?, COMMISSION_ANNUAL_RATE=?, REPAYMENT_WAY=?, AMOUNT=?, PROJECT_STATUS=?, CREATE_DATE=?, STATUS=?, IS_ASSIGNMENT=?, REQUEST_NO=?, MODIFY_DATE=? WHERE ID=? 
[transaction-service][53060] 2022-07-10 23:34:35,034 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==> Parameters: 1004(Long), USR_3525C3F56E36416B9FA7696619E2F05P(String), PRO_AE02C35BE3874676ABE7239E26B13F37(String), 令狐泽银先生第2次借款(String), 个人生活消费(String), NEW(String), 180(Integer), 0.00(BigDecimal), 0.05(BigDecimal), 0.05(BigDecimal), FIXED_REPAYMENT(String), 6000.00(BigDecimal), REPAYING(String), 2022-07-10 20:31:58.0(Timestamp), 1(Integer), 0(Integer), REQ_AFBC5163EBAE43A8BB03C6EF5A9FCFE6(String), 2022-07-10 20:33:38.0(Timestamp), 1546109979008921602(Long)
[transaction-service][53060] 2022-07-10 23:34:35,035 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:34:35,036 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Logic SQL: UPDATE project  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=?
[transaction-service][53060] 2022-07-10 23:34:35,037 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=18})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=19, logicSQL=UPDATE project  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=?), deleteStatement=false, updateTableAlias={project=project}, updateColumnValues={Column(name=CONSUMER_ID, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@418a6971, Column(name=USER_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@bbbbe92, Column(name=PROJECT_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2a7c8657, Column(name=NAME, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1d74afc8, Column(name=DESCRIPTION, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@fa79cf6, Column(name=TYPE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@59beecbe, Column(name=PERIOD, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@17be87e0, Column(name=ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2f8c7030, Column(name=BORROWER_ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1c7f091b, Column(name=COMMISSION_ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@328acd36, Column(name=REPAYMENT_WAY, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5168cd00, Column(name=AMOUNT, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1da93aed, Column(name=PROJECT_STATUS, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@797acf92, Column(name=CREATE_DATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1dfd5ef6, Column(name=STATUS, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@aea9084, Column(name=IS_ASSIGNMENT, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5e40bd66, Column(name=REQUEST_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@71e9ff63, Column(name=MODIFY_DATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@6141546}, whereStartIndex=282, whereStopIndex=291, whereParameterStartIndex=18, whereParameterEndIndex=18)
[transaction-service][53060] 2022-07-10 23:34:35,038 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE project_0  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=? ::: [1004, USR_3525C3F56E36416B9FA7696619E2F05P, PRO_AE02C35BE3874676ABE7239E26B13F37, 令狐泽银先生第2次借款, 个人生活消费, NEW, 180, 0.00, 0.05, 0.05, FIXED_REPAYMENT, 6000.00, REPAYING, 2022-07-10T20:31:58.000+0800, 1, 0, REQ_AFBC5163EBAE43A8BB03C6EF5A9FCFE6, 2022-07-10T20:33:38.000+0800, 1546109979008921602]
[transaction-service][53060] 2022-07-10 23:34:35,040 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE project_0  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=? ::: [1004, USR_3525C3F56E36416B9FA7696619E2F05P, PRO_AE02C35BE3874676ABE7239E26B13F37, 令狐泽银先生第2次借款, 个人生活消费, NEW, 180, 0.00, 0.05, 0.05, FIXED_REPAYMENT, 6000.00, REPAYING, 2022-07-10T20:31:58.000+0800, 1, 0, REQ_AFBC5163EBAE43A8BB03C6EF5A9FCFE6, 2022-07-10T20:33:38.000+0800, 1546109979008921602]
[transaction-service][53060] 2022-07-10 23:34:35,046 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - <==    Updates: 1
[transaction-service][53060] 2022-07-10 23:34:35,283 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ? 
[transaction-service][53060] 2022-07-10 23:34:35,283 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - ==> Parameters: FULLY(String)
[transaction-service][53060] 2022-07-10 23:34:35,315 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:34:35,316 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Logic SQL: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?
[transaction-service][53060] 2022-07-10 23:34:35,317 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=14, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=(1), alias=Optional.absent(), derivedAggregationSelectItems=[], index=-1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:34:35,318 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:34:35,318 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:34:35,319 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:34:35,319 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:34:35,458 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? 
[transaction-service][53060] 2022-07-10 23:34:35,463 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - ==> Parameters: FULLY(String), 0(Long), 10(Long)
[transaction-service][53060] 2022-07-10 23:34:35,525 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:34:35,525 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?
[transaction-service][53060] 2022-07-10 23:34:35,526 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(CREATE_DATE), orderDirection=DESC, nullOrderDirection=ASC, index=-1, expression=null, alias=Optional.absent())], limit=Limit(offset=LimitValue(value=-1, index=1, boundOpened=false), rowCount=LimitValue(value=-1, index=2, boundOpened=false)), subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:34:35,528 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:34:35,529 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:34:35,529 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:34:35,530 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:34:35,541 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:35:51,359 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 23:35:52,377 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 23:36:29,343 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[transaction-service][53060] 2022-07-10 23:36:35,070 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[172.26.144.1:10909] result: true
[transaction-service][53060] 2022-07-10 23:40:51,366 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 23:40:52,387 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 23:41:29,357 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[transaction-service][53060] 2022-07-10 23:45:51,368 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 23:45:52,379 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 23:46:29,365 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[transaction-service][53060] 2022-07-10 23:48:48,657 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ? 
[transaction-service][53060] 2022-07-10 23:48:48,658 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==> Parameters: FULLY(String)
[transaction-service][53060] 2022-07-10 23:48:48,659 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:48:48,660 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Logic SQL: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?
[transaction-service][53060] 2022-07-10 23:48:48,661 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=14, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=(1), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:48:48,662 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:48:48,663 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:48:48,665 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:48:48,666 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:48:48,704 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? 
[transaction-service][53060] 2022-07-10 23:48:48,710 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==> Parameters: FULLY(String), 0(Long), 10(Long)
[transaction-service][53060] 2022-07-10 23:48:48,711 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:48:48,712 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?
[transaction-service][53060] 2022-07-10 23:48:48,712 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(CREATE_DATE), orderDirection=DESC, nullOrderDirection=ASC, index=15, expression=null, alias=Optional.absent())], limit=Limit(offset=LimitValue(value=-1, index=1, boundOpened=false), rowCount=LimitValue(value=-1, index=2, boundOpened=false)), subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:48:48,713 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:48:48,714 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:48:48,715 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:48:48,716 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:48:48,725 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:48:50,801 WARN [http-nio-53060-exec-6][DefaultConfig.java:95] - Could not load config for namespace micro_service.spring-cloud-feign from Apollo, please check whether the configs are released in Apollo! Return default value now!
[transaction-service][53060] 2022-07-10 23:48:50,954 INFO [http-nio-53060-exec-6][ChainedDynamicProperty.java:115] - Flipping property: content-search-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[transaction-service][53060] 2022-07-10 23:48:50,962 INFO [http-nio-53060-exec-6][ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-content-search-service
[transaction-service][53060] 2022-07-10 23:48:50,963 INFO [http-nio-53060-exec-6][BaseLoadBalancer.java:197] - Client: content-search-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=content-search-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[transaction-service][53060] 2022-07-10 23:48:50,968 INFO [http-nio-53060-exec-6][DynamicServerListLoadBalancer.java:222] - Using serverListUpdater PollingServerListUpdater
[transaction-service][53060] 2022-07-10 23:48:50,971 INFO [http-nio-53060-exec-6][ChainedDynamicProperty.java:115] - Flipping property: content-search-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[transaction-service][53060] 2022-07-10 23:48:50,973 INFO [http-nio-53060-exec-6][DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client content-search-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=content-search-service,current list of Servers=[192.168.1.4:53090],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.4:53090;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@d308cad
[transaction-service][53060] 2022-07-10 23:48:51,977 INFO [PollingServerListUpdater-0][ChainedDynamicProperty.java:115] - Flipping property: content-search-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[transaction-service][53060] 2022-07-10 23:49:14,324 ERROR [http-nio-53060-exec-10][GlobalExceptionHandler.java:42] - 系统异常:null
[transaction-service][53060] 2022-07-10 23:49:23,795 ERROR [http-nio-53060-exec-5][GlobalExceptionHandler.java:42] - 系统异常:null
[transaction-service][53060] 2022-07-10 23:50:10,418 WARN [http-nio-53060-exec-8][DefaultConfig.java:95] - Could not load config for namespace micro_service.spring-cloud-feign from Apollo, please check whether the configs are released in Apollo! Return default value now!
[transaction-service][53060] 2022-07-10 23:50:10,509 INFO [http-nio-53060-exec-8][ChainedDynamicProperty.java:115] - Flipping property: consumer-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[transaction-service][53060] 2022-07-10 23:50:10,513 INFO [http-nio-53060-exec-8][ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-consumer-service
[transaction-service][53060] 2022-07-10 23:50:10,514 INFO [http-nio-53060-exec-8][BaseLoadBalancer.java:197] - Client: consumer-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=consumer-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[transaction-service][53060] 2022-07-10 23:50:10,517 INFO [http-nio-53060-exec-8][DynamicServerListLoadBalancer.java:222] - Using serverListUpdater PollingServerListUpdater
[transaction-service][53060] 2022-07-10 23:50:10,520 INFO [http-nio-53060-exec-8][ChainedDynamicProperty.java:115] - Flipping property: consumer-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[transaction-service][53060] 2022-07-10 23:50:10,522 INFO [http-nio-53060-exec-8][DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client consumer-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=consumer-service,current list of Servers=[192.168.1.4:53050],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.4:53050;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@115dd650
[transaction-service][53060] 2022-07-10 23:50:10,593 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT( 1 ) FROM project WHERE CONSUMER_ID = ? 
[transaction-service][53060] 2022-07-10 23:50:10,599 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - ==> Parameters: 1001(Long)
[transaction-service][53060] 2022-07-10 23:50:10,610 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:50:10,611 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Logic SQL: SELECT COUNT( 1 ) FROM project 
 
 WHERE CONSUMER_ID = ?
[transaction-service][53060] 2022-07-10 23:50:10,612 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=CONSUMER_ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT( 1 ) FROM project 
 
 WHERE CONSUMER_ID = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=16, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=( 1 ), alias=Optional.absent(), derivedAggregationSelectItems=[], index=-1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:50:10,613 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT( 1 ) FROM project_0 
 
 WHERE CONSUMER_ID = ? ::: [1001]
[transaction-service][53060] 2022-07-10 23:50:10,613 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT( 1 ) FROM project_1 
 
 WHERE CONSUMER_ID = ? ::: [1001]
[transaction-service][53060] 2022-07-10 23:50:10,628 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:50:11,506 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - ==>  Preparing: INSERT INTO project ( ID, CONSUMER_ID, USER_NO, PROJECT_NO, NAME, DESCRIPTION, TYPE, PERIOD, ANNUAL_RATE, BORROWER_ANNUAL_RATE, COMMISSION_ANNUAL_RATE, REPAYMENT_WAY, AMOUNT, PROJECT_STATUS, CREATE_DATE, STATUS, IS_ASSIGNMENT ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
[transaction-service][53060] 2022-07-10 23:50:11,514 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - ==> Parameters: 1546159859840573442(Long), 1001(Long), USR_3525C3F56E36416B9FA7696619E2F96Y(String), PRO_41F575BB23B54E97926DD0561BEE12C0(String), 罗锄乘先生第1次借款(String), 个人生活消费(String), NEW(String), 360(Integer), 0.00(BigDecimal), 0.05(BigDecimal), 0.05(BigDecimal), FIXED_REPAYMENT(String), 5200(BigDecimal), COLLECTING(String), 2022-07-10 23:50:10.588(Timestamp), 0(Integer), 0(Integer)
[transaction-service][53060] 2022-07-10 23:50:11,520 INFO [PollingServerListUpdater-0][ChainedDynamicProperty.java:115] - Flipping property: consumer-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[transaction-service][53060] 2022-07-10 23:50:11,603 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:50:11,603 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Logic SQL: INSERT INTO project  ( ID,
CONSUMER_ID,
USER_NO,
PROJECT_NO,
NAME,
DESCRIPTION,
TYPE,
PERIOD,
ANNUAL_RATE,
BORROWER_ANNUAL_RATE,
COMMISSION_ANNUAL_RATE,
REPAYMENT_WAY,
AMOUNT,
PROJECT_STATUS,
CREATE_DATE,
STATUS,
IS_ASSIGNMENT )  VALUES  ( ?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
? )
[transaction-service][53060] 2022-07-10 23:50:11,604 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0}), Condition(column=Column(name=CONSUMER_ID, tableName=project), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=1})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=21)], parametersIndex=17, logicSQL=INSERT INTO project  ( ID,
CONSUMER_ID,
USER_NO,
PROJECT_NO,
NAME,
DESCRIPTION,
TYPE,
PERIOD,
ANNUAL_RATE,
BORROWER_ANNUAL_RATE,
COMMISSION_ANNUAL_RATE,
REPAYMENT_WAY,
AMOUNT,
PROJECT_STATUS,
CREATE_DATE,
STATUS,
IS_ASSIGNMENT )  VALUES  ( ?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
? )), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[ID, CONSUMER_ID, USER_NO, PROJECT_NO, NAME, DESCRIPTION, TYPE, PERIOD, ANNUAL_RATE, BORROWER_ANNUAL_RATE, COMMISSION_ANNUAL_RATE, REPAYMENT_WAY, AMOUNT, PROJECT_STATUS, CREATE_DATE, STATUS, IS_ASSIGNMENT], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@42b39fb1, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@70bcdaff, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1b3c9d93, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@48bae7b5, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@16aab704, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@d7fc0c, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@7f782980, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@6060ee95, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2331770a, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1cb9c8fc, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2233d6c2, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@45c09057, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@6d6136c2, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@3f4dedba, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@3f4b957, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@42f7c356, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@26442aec])])
[transaction-service][53060] 2022-07-10 23:50:11,604 INFO [http-nio-53060-exec-8][SQLLogger.java:89] - Actual SQL: ds1 ::: INSERT INTO project_0   (ID, CONSUMER_ID, USER_NO, PROJECT_NO, NAME, DESCRIPTION, TYPE, PERIOD, ANNUAL_RATE, BORROWER_ANNUAL_RATE, COMMISSION_ANNUAL_RATE, REPAYMENT_WAY, AMOUNT, PROJECT_STATUS, CREATE_DATE, STATUS, IS_ASSIGNMENT) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ::: [1546159859840573442, 1001, USR_3525C3F56E36416B9FA7696619E2F96Y, PRO_41F575BB23B54E97926DD0561BEE12C0, 罗锄乘先生第1次借款, 个人生活消费, NEW, 360, 0.00, 0.05, 0.05, FIXED_REPAYMENT, 5200, COLLECTING, 2022-07-10T23:50:10.588+0800, 0, 0]
[transaction-service][53060] 2022-07-10 23:50:11,638 DEBUG [http-nio-53060-exec-8][BaseJdbcLogger.java:159] - <==    Updates: 1
[transaction-service][53060] 2022-07-10 23:50:14,853 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ? 
[transaction-service][53060] 2022-07-10 23:50:14,854 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==> Parameters: FULLY(String)
[transaction-service][53060] 2022-07-10 23:50:14,855 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:50:14,856 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Logic SQL: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?
[transaction-service][53060] 2022-07-10 23:50:14,856 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=14, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=(1), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:50:14,857 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:50:14,858 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:50:14,859 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:50:14,860 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:50:14,877 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? 
[transaction-service][53060] 2022-07-10 23:50:14,887 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==> Parameters: FULLY(String), 0(Long), 10(Long)
[transaction-service][53060] 2022-07-10 23:50:14,888 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:50:14,889 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?
[transaction-service][53060] 2022-07-10 23:50:14,889 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(CREATE_DATE), orderDirection=DESC, nullOrderDirection=ASC, index=15, expression=null, alias=Optional.absent())], limit=Limit(offset=LimitValue(value=-1, index=1, boundOpened=false), rowCount=LimitValue(value=-1, index=2, boundOpened=false)), subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:50:14,890 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:50:14,890 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:50:14,890 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:50:14,891 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:50:14,899 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:50:17,398 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ? 
[transaction-service][53060] 2022-07-10 23:50:17,399 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==> Parameters: COLLECTING(String)
[transaction-service][53060] 2022-07-10 23:50:17,400 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:50:17,401 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Logic SQL: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?
[transaction-service][53060] 2022-07-10 23:50:17,401 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=14, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=(1), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:50:17,402 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-07-10 23:50:17,402 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-07-10 23:50:17,402 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-07-10 23:50:17,402 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-07-10 23:50:17,408 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? 
[transaction-service][53060] 2022-07-10 23:50:17,416 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==> Parameters: COLLECTING(String), 0(Long), 10(Long)
[transaction-service][53060] 2022-07-10 23:50:17,417 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:50:17,417 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?
[transaction-service][53060] 2022-07-10 23:50:17,417 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(CREATE_DATE), orderDirection=DESC, nullOrderDirection=ASC, index=15, expression=null, alias=Optional.absent())], limit=Limit(offset=LimitValue(value=-1, index=1, boundOpened=false), rowCount=LimitValue(value=-1, index=2, boundOpened=false)), subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:50:17,418 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-07-10 23:50:17,419 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-07-10 23:50:17,419 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-07-10 23:50:17,419 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-07-10 23:50:17,424 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:50:20,082 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=? 
[transaction-service][53060] 2022-07-10 23:50:20,089 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==> Parameters: 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:50:20,092 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:50:20,093 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Logic SQL: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=?
[transaction-service][53060] 2022-07-10 23:50:20,093 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=216, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:50:20,094 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project_0 WHERE ID=? ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:50:20,095 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project_0 WHERE ID=? ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:50:20,099 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:50:20,119 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE project SET REQUEST_NO=? WHERE ID = ? 
[transaction-service][53060] 2022-07-10 23:50:20,129 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==> Parameters: REQ_6BAF29EF792C4C2A9084BC56AC13C712(String), 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:50:20,134 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:50:20,135 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Logic SQL: UPDATE project  SET REQUEST_NO=?  
 
 WHERE ID = ?
[transaction-service][53060] 2022-07-10 23:50:20,135 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=1})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=2, logicSQL=UPDATE project  SET REQUEST_NO=?  
 
 WHERE ID = ?), deleteStatement=false, updateTableAlias={project=project}, updateColumnValues={Column(name=REQUEST_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@73ed071}, whereStartIndex=38, whereStopIndex=49, whereParameterStartIndex=1, whereParameterEndIndex=1)
[transaction-service][53060] 2022-07-10 23:50:20,136 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE project_0  SET REQUEST_NO=?  
 
 WHERE ID = ? ::: [REQ_6BAF29EF792C4C2A9084BC56AC13C712, 1546159859840573442]
[transaction-service][53060] 2022-07-10 23:50:20,136 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE project_0  SET REQUEST_NO=?  
 
 WHERE ID = ? ::: [REQ_6BAF29EF792C4C2A9084BC56AC13C712, 1546159859840573442]
[transaction-service][53060] 2022-07-10 23:50:20,188 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - <==    Updates: 1
[transaction-service][53060] 2022-07-10 23:50:20,565 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE project SET STATUS=?,MODIFY_DATE=? WHERE ID = ? 
[transaction-service][53060] 2022-07-10 23:50:20,569 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==> Parameters: 1(Integer), 2022-07-10 23:50:20.561(Timestamp), 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:50:20,575 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:50:20,575 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Logic SQL: UPDATE project  SET STATUS=?,MODIFY_DATE=?  
 
 WHERE ID = ?
[transaction-service][53060] 2022-07-10 23:50:20,576 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=2})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=UPDATE project  SET STATUS=?,MODIFY_DATE=?  
 
 WHERE ID = ?), deleteStatement=false, updateTableAlias={project=project}, updateColumnValues={Column(name=STATUS, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@22adcc2a, Column(name=MODIFY_DATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@420f4387}, whereStartIndex=48, whereStopIndex=59, whereParameterStartIndex=2, whereParameterEndIndex=2)
[transaction-service][53060] 2022-07-10 23:50:20,576 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE project_0  SET STATUS=?,MODIFY_DATE=?  
 
 WHERE ID = ? ::: [1, 2022-07-10T23:50:20.561+0800, 1546159859840573442]
[transaction-service][53060] 2022-07-10 23:50:20,577 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE project_0  SET STATUS=?,MODIFY_DATE=?  
 
 WHERE ID = ? ::: [1, 2022-07-10T23:50:20.561+0800, 1546159859840573442]
[transaction-service][53060] 2022-07-10 23:50:20,604 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - <==    Updates: 1
[transaction-service][53060] 2022-07-10 23:50:20,634 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ? 
[transaction-service][53060] 2022-07-10 23:50:20,635 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - ==> Parameters: COLLECTING(String)
[transaction-service][53060] 2022-07-10 23:50:20,635 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:50:20,635 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Logic SQL: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?
[transaction-service][53060] 2022-07-10 23:50:20,636 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=14, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=(1), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:50:20,637 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-07-10 23:50:20,638 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-07-10 23:50:20,638 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-07-10 23:50:20,638 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-07-10 23:50:20,644 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? 
[transaction-service][53060] 2022-07-10 23:50:20,650 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - ==> Parameters: COLLECTING(String), 0(Long), 10(Long)
[transaction-service][53060] 2022-07-10 23:50:20,651 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:50:20,651 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?
[transaction-service][53060] 2022-07-10 23:50:20,651 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(CREATE_DATE), orderDirection=DESC, nullOrderDirection=ASC, index=15, expression=null, alias=Optional.absent())], limit=Limit(offset=LimitValue(value=-1, index=1, boundOpened=false), rowCount=LimitValue(value=-1, index=2, boundOpened=false)), subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:50:20,652 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-07-10 23:50:20,652 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-07-10 23:50:20,652 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-07-10 23:50:20,652 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-07-10 23:50:20,659 DEBUG [http-nio-53060-exec-3][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:50:27,028 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ? 
[transaction-service][53060] 2022-07-10 23:50:27,029 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==> Parameters: COLLECTING(String)
[transaction-service][53060] 2022-07-10 23:50:27,030 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:50:27,030 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Logic SQL: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?
[transaction-service][53060] 2022-07-10 23:50:27,032 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=14, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=(1), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:50:27,033 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-07-10 23:50:27,033 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-07-10 23:50:27,034 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-07-10 23:50:27,035 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-07-10 23:50:27,043 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? 
[transaction-service][53060] 2022-07-10 23:50:27,049 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - ==> Parameters: COLLECTING(String), 0(Long), 10(Long)
[transaction-service][53060] 2022-07-10 23:50:27,050 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:50:27,050 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?
[transaction-service][53060] 2022-07-10 23:50:27,051 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(CREATE_DATE), orderDirection=DESC, nullOrderDirection=ASC, index=15, expression=null, alias=Optional.absent())], limit=Limit(offset=LimitValue(value=-1, index=1, boundOpened=false), rowCount=LimitValue(value=-1, index=2, boundOpened=false)), subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:50:27,051 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-07-10 23:50:27,052 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-07-10 23:50:27,053 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-07-10 23:50:27,054 INFO [http-nio-53060-exec-10][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-07-10 23:50:27,060 DEBUG [http-nio-53060-exec-10][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:50:38,831 ERROR [http-nio-53060-exec-5][GlobalExceptionHandler.java:42] - 系统异常:null
[transaction-service][53060] 2022-07-10 23:50:51,363 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 23:50:52,374 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 23:51:29,377 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[transaction-service][53060] 2022-07-10 23:52:34,040 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID IN (?) 
[transaction-service][53060] 2022-07-10 23:52:34,066 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==> Parameters: 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:52:34,241 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:52:34,241 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE ID IN (?)
[transaction-service][53060] 2022-07-10 23:52:34,242 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=IN, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE ID IN (?))), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:52:34,242 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE ID IN (?) ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:52:34,243 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE ID IN (?) ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:52:34,294 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:52:34,298 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1 
[transaction-service][53060] 2022-07-10 23:52:34,309 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==> Parameters: 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:52:34,409 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:52:34,410 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Logic SQL: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1
[transaction-service][53060] 2022-07-10 23:52:34,410 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=30, groupByLastIndex=0, items=[CommonSelectItem(expression=IFNULL(SUM(AMOUNT),0.0), alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:52:34,411 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_0 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:52:34,412 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_0 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:52:34,420 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - <==      Total: 2
[transaction-service][53060] 2022-07-10 23:52:34,426 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT( 1 ) FROM tender WHERE PROJECT_ID = ? 
[transaction-service][53060] 2022-07-10 23:52:34,439 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - ==> Parameters: 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:52:34,447 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:52:34,447 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Logic SQL: SELECT COUNT( 1 ) FROM tender 
 
 WHERE PROJECT_ID = ?
[transaction-service][53060] 2022-07-10 23:52:34,448 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT( 1 ) FROM tender 
 
 WHERE PROJECT_ID = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=16, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=( 1 ), alias=Optional.absent(), derivedAggregationSelectItems=[], index=-1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:52:34,448 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT( 1 ) FROM tender_0 
 
 WHERE PROJECT_ID = ? ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:52:34,449 INFO [http-nio-53060-exec-7][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT( 1 ) FROM tender_0 
 
 WHERE PROJECT_ID = ? ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:52:34,452 DEBUG [http-nio-53060-exec-7][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:54:05,534 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=? 
[transaction-service][53060] 2022-07-10 23:54:05,542 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:54:05,543 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:05,543 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=?
[transaction-service][53060] 2022-07-10 23:54:05,543 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=216, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:54:05,544 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project_0 WHERE ID=? ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:05,545 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project_0 WHERE ID=? ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:05,571 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:54:05,575 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1 
[transaction-service][53060] 2022-07-10 23:54:05,583 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:54:05,585 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:05,585 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1
[transaction-service][53060] 2022-07-10 23:54:05,586 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=30, groupByLastIndex=0, items=[CommonSelectItem(expression=IFNULL(SUM(AMOUNT),0.0), alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:54:05,586 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_0 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:05,586 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_0 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:05,589 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - <==      Total: 2
[transaction-service][53060] 2022-07-10 23:54:05,597 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: INSERT INTO tender ( ID, CONSUMER_ID, CONSUMER_USERNAME, USER_NO, PROJECT_ID, PROJECT_NO, AMOUNT, TENDER_STATUS, CREATE_DATE, REQUEST_NO, STATUS, PROJECT_PERIOD, PROJECT_ANNUAL_RATE ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
[transaction-service][53060] 2022-07-10 23:54:05,606 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: 1546160841626476545(Long), 1002(Long), 15378791982(String), USR_3525C3F56E36416B9FA7696619E2F01Y(String), 1546159859840573442(Long), 罗锄乘先生第1次借款(String), 5200(BigDecimal), FROZEN(String), 2022-07-10 23:54:05.591(Timestamp), REQ_7567D04AA203492FB62C12FC3DF1D257(String), 0(Integer), 360(Integer), 0.00(BigDecimal)
[transaction-service][53060] 2022-07-10 23:54:05,615 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:05,615 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: INSERT INTO tender  ( ID,
CONSUMER_ID,
CONSUMER_USERNAME,
USER_NO,
PROJECT_ID,
PROJECT_NO,
AMOUNT,
TENDER_STATUS,
CREATE_DATE,
REQUEST_NO,
STATUS,

PROJECT_PERIOD,
PROJECT_ANNUAL_RATE )  VALUES  ( ?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,

?,
? )
[transaction-service][53060] 2022-07-10 23:54:05,616 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=CONSUMER_ID, tableName=tender), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=1}), Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=4})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=20)], parametersIndex=13, logicSQL=INSERT INTO tender  ( ID,
CONSUMER_ID,
CONSUMER_USERNAME,
USER_NO,
PROJECT_ID,
PROJECT_NO,
AMOUNT,
TENDER_STATUS,
CREATE_DATE,
REQUEST_NO,
STATUS,

PROJECT_PERIOD,
PROJECT_ANNUAL_RATE )  VALUES  ( ?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,

?,
? )), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[ID, CONSUMER_ID, CONSUMER_USERNAME, USER_NO, PROJECT_ID, PROJECT_NO, AMOUNT, TENDER_STATUS, CREATE_DATE, REQUEST_NO, STATUS, PROJECT_PERIOD, PROJECT_ANNUAL_RATE], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@619b85a7, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1a0dcb81, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1dbc650c, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4b897c8a, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@76827ee1, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2a7f273, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@7ccd732e, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@7ca03d11, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@19303112, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@24b97c2d, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@33fa2f97, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4ecfd44c, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@566fc426])])
[transaction-service][53060] 2022-07-10 23:54:05,617 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: INSERT INTO tender_0   (ID, CONSUMER_ID, CONSUMER_USERNAME, USER_NO, PROJECT_ID, PROJECT_NO, AMOUNT, TENDER_STATUS, CREATE_DATE, REQUEST_NO, STATUS, PROJECT_PERIOD, PROJECT_ANNUAL_RATE) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ::: [1546160841626476545, 1002, 15378791982, USR_3525C3F56E36416B9FA7696619E2F01Y, 1546159859840573442, 罗锄乘先生第1次借款, 5200, FROZEN, 2022-07-10T23:54:05.591+0800, REQ_7567D04AA203492FB62C12FC3DF1D257, 0, 360, 0.00]
[transaction-service][53060] 2022-07-10 23:54:05,674 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - <==    Updates: 1
[transaction-service][53060] 2022-07-10 23:54:05,881 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE tender SET CONSUMER_ID=?, CONSUMER_USERNAME=?, USER_NO=?, PROJECT_ID=?, PROJECT_NO=?, AMOUNT=?, TENDER_STATUS=?, CREATE_DATE=?, REQUEST_NO=?, STATUS=?, PROJECT_PERIOD=?, PROJECT_ANNUAL_RATE=? WHERE ID=? 
[transaction-service][53060] 2022-07-10 23:54:05,889 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: 1002(Long), 15378791982(String), USR_3525C3F56E36416B9FA7696619E2F01Y(String), 1546159859840573442(Long), 罗锄乘先生第1次借款(String), 5200(BigDecimal), FROZEN(String), 2022-07-10 23:54:05.591(Timestamp), REQ_7567D04AA203492FB62C12FC3DF1D257(String), 1(Integer), 360(Integer), 0.00(BigDecimal), 1546160841626476545(Long)
[transaction-service][53060] 2022-07-10 23:54:05,890 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:05,890 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?
[transaction-service][53060] 2022-07-10 23:54:05,890 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=13, logicSQL=UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?), deleteStatement=false, updateTableAlias={tender=tender}, updateColumnValues={Column(name=CONSUMER_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4e32356d, Column(name=CONSUMER_USERNAME, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@49141222, Column(name=USER_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@313e29af, Column(name=PROJECT_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@76f6cbe7, Column(name=PROJECT_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@29b01109, Column(name=AMOUNT, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@40dc931f, Column(name=TENDER_STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@efa9fa, Column(name=CREATE_DATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4006e3f3, Column(name=REQUEST_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@69979aa3, Column(name=STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4df7b8e5, Column(name=PROJECT_PERIOD, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@30aa68d8, Column(name=PROJECT_ANNUAL_RATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@47441c45}, whereStartIndex=202, whereStopIndex=211, whereParameterStartIndex=12, whereParameterEndIndex=12)
[transaction-service][53060] 2022-07-10 23:54:05,891 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1002, 15378791982, USR_3525C3F56E36416B9FA7696619E2F01Y, 1546159859840573442, 罗锄乘先生第1次借款, 5200, FROZEN, 2022-07-10T23:54:05.591+0800, REQ_7567D04AA203492FB62C12FC3DF1D257, 1, 360, 0.00, 1546160841626476545]
[transaction-service][53060] 2022-07-10 23:54:05,892 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1002, 15378791982, USR_3525C3F56E36416B9FA7696619E2F01Y, 1546159859840573442, 罗锄乘先生第1次借款, 5200, FROZEN, 2022-07-10T23:54:05.591+0800, REQ_7567D04AA203492FB62C12FC3DF1D257, 1, 360, 0.00, 1546160841626476545]
[transaction-service][53060] 2022-07-10 23:54:05,892 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1002, 15378791982, USR_3525C3F56E36416B9FA7696619E2F01Y, 1546159859840573442, 罗锄乘先生第1次借款, 5200, FROZEN, 2022-07-10T23:54:05.591+0800, REQ_7567D04AA203492FB62C12FC3DF1D257, 1, 360, 0.00, 1546160841626476545]
[transaction-service][53060] 2022-07-10 23:54:05,893 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1002, 15378791982, USR_3525C3F56E36416B9FA7696619E2F01Y, 1546159859840573442, 罗锄乘先生第1次借款, 5200, FROZEN, 2022-07-10T23:54:05.591+0800, REQ_7567D04AA203492FB62C12FC3DF1D257, 1, 360, 0.00, 1546160841626476545]
[transaction-service][53060] 2022-07-10 23:54:05,922 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - <==    Updates: 1
[transaction-service][53060] 2022-07-10 23:54:05,926 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1 
[transaction-service][53060] 2022-07-10 23:54:05,936 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:54:05,936 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:05,937 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1
[transaction-service][53060] 2022-07-10 23:54:05,938 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=30, groupByLastIndex=0, items=[CommonSelectItem(expression=IFNULL(SUM(AMOUNT),0.0), alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:54:05,938 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_0 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:05,938 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_0 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:05,942 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - <==      Total: 2
[transaction-service][53060] 2022-07-10 23:54:05,949 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE project SET CONSUMER_ID=?, USER_NO=?, PROJECT_NO=?, NAME=?, DESCRIPTION=?, TYPE=?, PERIOD=?, ANNUAL_RATE=?, BORROWER_ANNUAL_RATE=?, COMMISSION_ANNUAL_RATE=?, REPAYMENT_WAY=?, AMOUNT=?, PROJECT_STATUS=?, CREATE_DATE=?, STATUS=?, IS_ASSIGNMENT=?, REQUEST_NO=?, MODIFY_DATE=? WHERE ID=? 
[transaction-service][53060] 2022-07-10 23:54:05,959 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: 1001(Long), USR_3525C3F56E36416B9FA7696619E2F96Y(String), PRO_41F575BB23B54E97926DD0561BEE12C0(String), 罗锄乘先生第1次借款(String), 个人生活消费(String), NEW(String), 360(Integer), 0.00(BigDecimal), 0.05(BigDecimal), 0.05(BigDecimal), FIXED_REPAYMENT(String), 5200.00(BigDecimal), FULLY(String), 2022-07-10 23:50:11.0(Timestamp), 1(Integer), 0(Integer), REQ_6BAF29EF792C4C2A9084BC56AC13C712(String), 2022-07-10 23:54:05.945(Timestamp), 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:54:05,960 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:05,961 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: UPDATE project  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=?
[transaction-service][53060] 2022-07-10 23:54:05,961 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=18})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=19, logicSQL=UPDATE project  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=?), deleteStatement=false, updateTableAlias={project=project}, updateColumnValues={Column(name=CONSUMER_ID, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@418a6971, Column(name=USER_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@bbbbe92, Column(name=PROJECT_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2a7c8657, Column(name=NAME, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1d74afc8, Column(name=DESCRIPTION, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@fa79cf6, Column(name=TYPE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@59beecbe, Column(name=PERIOD, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@17be87e0, Column(name=ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2f8c7030, Column(name=BORROWER_ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1c7f091b, Column(name=COMMISSION_ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@328acd36, Column(name=REPAYMENT_WAY, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5168cd00, Column(name=AMOUNT, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1da93aed, Column(name=PROJECT_STATUS, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@797acf92, Column(name=CREATE_DATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1dfd5ef6, Column(name=STATUS, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@aea9084, Column(name=IS_ASSIGNMENT, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5e40bd66, Column(name=REQUEST_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@71e9ff63, Column(name=MODIFY_DATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@6141546}, whereStartIndex=282, whereStopIndex=291, whereParameterStartIndex=18, whereParameterEndIndex=18)
[transaction-service][53060] 2022-07-10 23:54:05,961 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE project_0  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=? ::: [1001, USR_3525C3F56E36416B9FA7696619E2F96Y, PRO_41F575BB23B54E97926DD0561BEE12C0, 罗锄乘先生第1次借款, 个人生活消费, NEW, 360, 0.00, 0.05, 0.05, FIXED_REPAYMENT, 5200.00, FULLY, 2022-07-10T23:50:11.000+0800, 1, 0, REQ_6BAF29EF792C4C2A9084BC56AC13C712, 2022-07-10T23:54:05.945+0800, 1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:05,962 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE project_0  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=? ::: [1001, USR_3525C3F56E36416B9FA7696619E2F96Y, PRO_41F575BB23B54E97926DD0561BEE12C0, 罗锄乘先生第1次借款, 个人生活消费, NEW, 360, 0.00, 0.05, 0.05, FIXED_REPAYMENT, 5200.00, FULLY, 2022-07-10T23:50:11.000+0800, 1, 0, REQ_6BAF29EF792C4C2A9084BC56AC13C712, 2022-07-10T23:54:05.945+0800, 1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:06,080 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - <==    Updates: 1
[transaction-service][53060] 2022-07-10 23:54:14,159 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID IN (?) 
[transaction-service][53060] 2022-07-10 23:54:14,172 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==> Parameters: 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:54:14,174 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:14,175 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE ID IN (?)
[transaction-service][53060] 2022-07-10 23:54:14,176 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=IN, compareOperator=null, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE ID IN (?))), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:54:14,178 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE ID IN (?) ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:14,179 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE ID IN (?) ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:14,187 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:54:14,193 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1 
[transaction-service][53060] 2022-07-10 23:54:14,203 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==> Parameters: 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:54:14,205 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:14,206 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Logic SQL: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1
[transaction-service][53060] 2022-07-10 23:54:14,206 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender WHERE PROJECT_ID = ? AND STATUS = 1)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=30, groupByLastIndex=0, items=[CommonSelectItem(expression=IFNULL(SUM(AMOUNT),0.0), alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:54:14,207 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_0 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:14,208 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT IFNULL(SUM(AMOUNT), 0.0) FROM tender_0 WHERE PROJECT_ID = ? AND STATUS = 1 ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:14,210 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - <==      Total: 2
[transaction-service][53060] 2022-07-10 23:54:14,217 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT( 1 ) FROM tender WHERE PROJECT_ID = ? 
[transaction-service][53060] 2022-07-10 23:54:14,230 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - ==> Parameters: 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:54:14,231 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:14,231 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Logic SQL: SELECT COUNT( 1 ) FROM tender 
 
 WHERE PROJECT_ID = ?
[transaction-service][53060] 2022-07-10 23:54:14,232 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT( 1 ) FROM tender 
 
 WHERE PROJECT_ID = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=16, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=( 1 ), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:54:14,233 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT( 1 ) FROM tender_0 
 
 WHERE PROJECT_ID = ? ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:14,235 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT( 1 ) FROM tender_0 
 
 WHERE PROJECT_ID = ? ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:14,236 DEBUG [http-nio-53060-exec-5][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:54:20,642 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ? 
[transaction-service][53060] 2022-07-10 23:54:20,643 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==> Parameters: FULLY(String)
[transaction-service][53060] 2022-07-10 23:54:20,644 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:20,644 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Logic SQL: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?
[transaction-service][53060] 2022-07-10 23:54:20,644 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=14, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=(1), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:54:20,644 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:54:20,645 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:54:20,645 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:54:20,646 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:54:20,652 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? 
[transaction-service][53060] 2022-07-10 23:54:20,661 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - ==> Parameters: FULLY(String), 0(Long), 10(Long)
[transaction-service][53060] 2022-07-10 23:54:20,661 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:20,662 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?
[transaction-service][53060] 2022-07-10 23:54:20,664 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(CREATE_DATE), orderDirection=DESC, nullOrderDirection=ASC, index=15, expression=null, alias=Optional.absent())], limit=Limit(offset=LimitValue(value=-1, index=1, boundOpened=false), rowCount=LimitValue(value=-1, index=2, boundOpened=false)), subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:54:20,665 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:54:20,665 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:54:20,666 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:54:20,667 INFO [http-nio-53060-exec-9][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:54:20,675 DEBUG [http-nio-53060-exec-9][BaseJdbcLogger.java:159] - <==      Total: 2
[transaction-service][53060] 2022-07-10 23:54:25,583 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=? 
[transaction-service][53060] 2022-07-10 23:54:25,596 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==> Parameters: 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:54:25,597 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:25,598 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Logic SQL: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=?
[transaction-service][53060] 2022-07-10 23:54:25,599 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=216, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:54:25,602 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project_0 WHERE ID=? ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:25,603 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project_0 WHERE ID=? ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:25,609 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:54:25,617 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE FROM tender WHERE PROJECT_ID = ? 
[transaction-service][53060] 2022-07-10 23:54:25,626 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==> Parameters: 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:54:25,627 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:25,627 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender 
 
 WHERE PROJECT_ID = ?
[transaction-service][53060] 2022-07-10 23:54:25,627 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender 
 
 WHERE PROJECT_ID = ?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=168, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_USERNAME, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_ID, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=TENDER_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NAME, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_PERIOD, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_ANNUAL_RATE, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:54:25,630 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender_0 
 
 WHERE PROJECT_ID = ? ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:25,631 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender_0 
 
 WHERE PROJECT_ID = ? ::: [1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:25,636 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:54:25,909 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE tender SET CONSUMER_ID=?, CONSUMER_USERNAME=?, USER_NO=?, PROJECT_ID=?, PROJECT_NO=?, AMOUNT=?, TENDER_STATUS=?, CREATE_DATE=?, REQUEST_NO=?, STATUS=?, PROJECT_PERIOD=?, PROJECT_ANNUAL_RATE=? WHERE ID=? 
[transaction-service][53060] 2022-07-10 23:54:25,922 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==> Parameters: 1002(Long), 15378791982(String), USR_3525C3F56E36416B9FA7696619E2F01Y(String), 1546159859840573442(Long), 罗锄乘先生第1次借款(String), 5200(BigDecimal), LOAN(String), 2022-07-10 23:54:06.0(Timestamp), REQ_7567D04AA203492FB62C12FC3DF1D257(String), 1(Integer), 360(Integer), 0.00(BigDecimal), 1546160841626476545(Long)
[transaction-service][53060] 2022-07-10 23:54:25,923 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:25,923 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Logic SQL: UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?
[transaction-service][53060] 2022-07-10 23:54:25,923 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=13, logicSQL=UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?), deleteStatement=false, updateTableAlias={tender=tender}, updateColumnValues={Column(name=CONSUMER_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4e32356d, Column(name=CONSUMER_USERNAME, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@49141222, Column(name=USER_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@313e29af, Column(name=PROJECT_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@76f6cbe7, Column(name=PROJECT_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@29b01109, Column(name=AMOUNT, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@40dc931f, Column(name=TENDER_STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@efa9fa, Column(name=CREATE_DATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4006e3f3, Column(name=REQUEST_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@69979aa3, Column(name=STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4df7b8e5, Column(name=PROJECT_PERIOD, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@30aa68d8, Column(name=PROJECT_ANNUAL_RATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@47441c45}, whereStartIndex=202, whereStopIndex=211, whereParameterStartIndex=12, whereParameterEndIndex=12)
[transaction-service][53060] 2022-07-10 23:54:25,924 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1002, 15378791982, USR_3525C3F56E36416B9FA7696619E2F01Y, 1546159859840573442, 罗锄乘先生第1次借款, 5200, LOAN, 2022-07-10T23:54:06.000+0800, REQ_7567D04AA203492FB62C12FC3DF1D257, 1, 360, 0.00, 1546160841626476545]
[transaction-service][53060] 2022-07-10 23:54:25,924 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1002, 15378791982, USR_3525C3F56E36416B9FA7696619E2F01Y, 1546159859840573442, 罗锄乘先生第1次借款, 5200, LOAN, 2022-07-10T23:54:06.000+0800, REQ_7567D04AA203492FB62C12FC3DF1D257, 1, 360, 0.00, 1546160841626476545]
[transaction-service][53060] 2022-07-10 23:54:25,924 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1002, 15378791982, USR_3525C3F56E36416B9FA7696619E2F01Y, 1546159859840573442, 罗锄乘先生第1次借款, 5200, LOAN, 2022-07-10T23:54:06.000+0800, REQ_7567D04AA203492FB62C12FC3DF1D257, 1, 360, 0.00, 1546160841626476545]
[transaction-service][53060] 2022-07-10 23:54:25,925 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1002, 15378791982, USR_3525C3F56E36416B9FA7696619E2F01Y, 1546159859840573442, 罗锄乘先生第1次借款, 5200, LOAN, 2022-07-10T23:54:06.000+0800, REQ_7567D04AA203492FB62C12FC3DF1D257, 1, 360, 0.00, 1546160841626476545]
[transaction-service][53060] 2022-07-10 23:54:25,931 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - <==    Updates: 1
[transaction-service][53060] 2022-07-10 23:54:26,002 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE project SET CONSUMER_ID=?, USER_NO=?, PROJECT_NO=?, NAME=?, DESCRIPTION=?, TYPE=?, PERIOD=?, ANNUAL_RATE=?, BORROWER_ANNUAL_RATE=?, COMMISSION_ANNUAL_RATE=?, REPAYMENT_WAY=?, AMOUNT=?, PROJECT_STATUS=?, CREATE_DATE=?, STATUS=?, IS_ASSIGNMENT=?, REQUEST_NO=?, MODIFY_DATE=? WHERE ID=? 
[transaction-service][53060] 2022-07-10 23:54:26,010 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==> Parameters: 1001(Long), USR_3525C3F56E36416B9FA7696619E2F96Y(String), PRO_41F575BB23B54E97926DD0561BEE12C0(String), 罗锄乘先生第1次借款(String), 个人生活消费(String), NEW(String), 360(Integer), 0.00(BigDecimal), 0.05(BigDecimal), 0.05(BigDecimal), FIXED_REPAYMENT(String), 5200.00(BigDecimal), REPAYING(String), 2022-07-10 23:50:11.0(Timestamp), 1(Integer), 0(Integer), REQ_6BAF29EF792C4C2A9084BC56AC13C712(String), 2022-07-10 23:54:06.0(Timestamp), 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:54:26,011 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:26,011 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Logic SQL: UPDATE project  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=?
[transaction-service][53060] 2022-07-10 23:54:26,011 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=18})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=19, logicSQL=UPDATE project  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=?), deleteStatement=false, updateTableAlias={project=project}, updateColumnValues={Column(name=CONSUMER_ID, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@418a6971, Column(name=USER_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@bbbbe92, Column(name=PROJECT_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2a7c8657, Column(name=NAME, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1d74afc8, Column(name=DESCRIPTION, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@fa79cf6, Column(name=TYPE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@59beecbe, Column(name=PERIOD, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@17be87e0, Column(name=ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2f8c7030, Column(name=BORROWER_ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1c7f091b, Column(name=COMMISSION_ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@328acd36, Column(name=REPAYMENT_WAY, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5168cd00, Column(name=AMOUNT, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1da93aed, Column(name=PROJECT_STATUS, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@797acf92, Column(name=CREATE_DATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1dfd5ef6, Column(name=STATUS, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@aea9084, Column(name=IS_ASSIGNMENT, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5e40bd66, Column(name=REQUEST_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@71e9ff63, Column(name=MODIFY_DATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@6141546}, whereStartIndex=282, whereStopIndex=291, whereParameterStartIndex=18, whereParameterEndIndex=18)
[transaction-service][53060] 2022-07-10 23:54:26,013 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE project_0  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=? ::: [1001, USR_3525C3F56E36416B9FA7696619E2F96Y, PRO_41F575BB23B54E97926DD0561BEE12C0, 罗锄乘先生第1次借款, 个人生活消费, NEW, 360, 0.00, 0.05, 0.05, FIXED_REPAYMENT, 5200.00, REPAYING, 2022-07-10T23:50:11.000+0800, 1, 0, REQ_6BAF29EF792C4C2A9084BC56AC13C712, 2022-07-10T23:54:06.000+0800, 1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:26,014 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE project_0  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=? ::: [1001, USR_3525C3F56E36416B9FA7696619E2F96Y, PRO_41F575BB23B54E97926DD0561BEE12C0, 罗锄乘先生第1次借款, 个人生活消费, NEW, 360, 0.00, 0.05, 0.05, FIXED_REPAYMENT, 5200.00, REPAYING, 2022-07-10T23:50:11.000+0800, 1, 0, REQ_6BAF29EF792C4C2A9084BC56AC13C712, 2022-07-10T23:54:06.000+0800, 1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:26,022 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - <==    Updates: 1
[transaction-service][53060] 2022-07-10 23:54:26,036 INFO [http-nio-53060-exec-2][P2PTransactionListenerImpl.java:39] - 满标放款执行本地事务:将项目状态更新为REPAYING
[transaction-service][53060] 2022-07-10 23:54:26,038 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE project SET CONSUMER_ID=?, USER_NO=?, PROJECT_NO=?, NAME=?, DESCRIPTION=?, TYPE=?, PERIOD=?, ANNUAL_RATE=?, BORROWER_ANNUAL_RATE=?, COMMISSION_ANNUAL_RATE=?, REPAYMENT_WAY=?, AMOUNT=?, PROJECT_STATUS=?, CREATE_DATE=?, STATUS=?, IS_ASSIGNMENT=?, REQUEST_NO=?, MODIFY_DATE=? WHERE ID=? 
[transaction-service][53060] 2022-07-10 23:54:26,051 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - ==> Parameters: 1001(Long), USR_3525C3F56E36416B9FA7696619E2F96Y(String), PRO_41F575BB23B54E97926DD0561BEE12C0(String), 罗锄乘先生第1次借款(String), 个人生活消费(String), NEW(String), 360(Integer), 0.00(BigDecimal), 0.05(BigDecimal), 0.05(BigDecimal), FIXED_REPAYMENT(String), 5200.00(BigDecimal), REPAYING(String), 2022-07-10 23:50:11.0(Timestamp), 1(Integer), 0(Integer), REQ_6BAF29EF792C4C2A9084BC56AC13C712(String), 2022-07-10 23:54:06.0(Timestamp), 1546159859840573442(Long)
[transaction-service][53060] 2022-07-10 23:54:26,052 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:26,053 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Logic SQL: UPDATE project  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=?
[transaction-service][53060] 2022-07-10 23:54:26,053 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=18})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=19, logicSQL=UPDATE project  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=?), deleteStatement=false, updateTableAlias={project=project}, updateColumnValues={Column(name=CONSUMER_ID, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@418a6971, Column(name=USER_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@bbbbe92, Column(name=PROJECT_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2a7c8657, Column(name=NAME, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1d74afc8, Column(name=DESCRIPTION, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@fa79cf6, Column(name=TYPE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@59beecbe, Column(name=PERIOD, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@17be87e0, Column(name=ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2f8c7030, Column(name=BORROWER_ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1c7f091b, Column(name=COMMISSION_ANNUAL_RATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@328acd36, Column(name=REPAYMENT_WAY, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5168cd00, Column(name=AMOUNT, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1da93aed, Column(name=PROJECT_STATUS, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@797acf92, Column(name=CREATE_DATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1dfd5ef6, Column(name=STATUS, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@aea9084, Column(name=IS_ASSIGNMENT, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@5e40bd66, Column(name=REQUEST_NO, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@71e9ff63, Column(name=MODIFY_DATE, tableName=project)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@6141546}, whereStartIndex=282, whereStopIndex=291, whereParameterStartIndex=18, whereParameterEndIndex=18)
[transaction-service][53060] 2022-07-10 23:54:26,054 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE project_0  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=? ::: [1001, USR_3525C3F56E36416B9FA7696619E2F96Y, PRO_41F575BB23B54E97926DD0561BEE12C0, 罗锄乘先生第1次借款, 个人生活消费, NEW, 360, 0.00, 0.05, 0.05, FIXED_REPAYMENT, 5200.00, REPAYING, 2022-07-10T23:50:11.000+0800, 1, 0, REQ_6BAF29EF792C4C2A9084BC56AC13C712, 2022-07-10T23:54:06.000+0800, 1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:26,055 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE project_0  SET CONSUMER_ID=?,
USER_NO=?,
PROJECT_NO=?,
NAME=?,
DESCRIPTION=?,
TYPE=?,
PERIOD=?,
ANNUAL_RATE=?,
BORROWER_ANNUAL_RATE=?,
COMMISSION_ANNUAL_RATE=?,
REPAYMENT_WAY=?,
AMOUNT=?,
PROJECT_STATUS=?,
CREATE_DATE=?,
STATUS=?,
IS_ASSIGNMENT=?,
REQUEST_NO=?,
MODIFY_DATE=?  WHERE ID=? ::: [1001, USR_3525C3F56E36416B9FA7696619E2F96Y, PRO_41F575BB23B54E97926DD0561BEE12C0, 罗锄乘先生第1次借款, 个人生活消费, NEW, 360, 0.00, 0.05, 0.05, FIXED_REPAYMENT, 5200.00, REPAYING, 2022-07-10T23:50:11.000+0800, 1, 0, REQ_6BAF29EF792C4C2A9084BC56AC13C712, 2022-07-10T23:54:06.000+0800, 1546159859840573442]
[transaction-service][53060] 2022-07-10 23:54:26,058 DEBUG [http-nio-53060-exec-2][BaseJdbcLogger.java:159] - <==    Updates: 1
[transaction-service][53060] 2022-07-10 23:54:26,324 DEBUG [http-nio-53060-exec-6][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ? 
[transaction-service][53060] 2022-07-10 23:54:26,325 DEBUG [http-nio-53060-exec-6][BaseJdbcLogger.java:159] - ==> Parameters: FULLY(String)
[transaction-service][53060] 2022-07-10 23:54:26,325 INFO [http-nio-53060-exec-6][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:26,327 INFO [http-nio-53060-exec-6][SQLLogger.java:89] - Logic SQL: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?
[transaction-service][53060] 2022-07-10 23:54:26,327 INFO [http-nio-53060-exec-6][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=14, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=(1), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:54:26,328 INFO [http-nio-53060-exec-6][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:54:26,329 INFO [http-nio-53060-exec-6][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:54:26,329 INFO [http-nio-53060-exec-6][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:54:26,330 INFO [http-nio-53060-exec-6][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [FULLY]
[transaction-service][53060] 2022-07-10 23:54:26,335 DEBUG [http-nio-53060-exec-6][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? 
[transaction-service][53060] 2022-07-10 23:54:26,346 DEBUG [http-nio-53060-exec-6][BaseJdbcLogger.java:159] - ==> Parameters: FULLY(String), 0(Long), 10(Long)
[transaction-service][53060] 2022-07-10 23:54:26,347 INFO [http-nio-53060-exec-6][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 23:54:26,348 INFO [http-nio-53060-exec-6][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?
[transaction-service][53060] 2022-07-10 23:54:26,348 INFO [http-nio-53060-exec-6][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=217, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(CREATE_DATE), orderDirection=DESC, nullOrderDirection=ASC, index=15, expression=null, alias=Optional.absent())], limit=Limit(offset=LimitValue(value=-1, index=1, boundOpened=false), rowCount=LimitValue(value=-1, index=2, boundOpened=false)), subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 23:54:26,350 INFO [http-nio-53060-exec-6][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:54:26,351 INFO [http-nio-53060-exec-6][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:54:26,351 INFO [http-nio-53060-exec-6][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:54:26,351 INFO [http-nio-53060-exec-6][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [FULLY, 0, 10]
[transaction-service][53060] 2022-07-10 23:54:26,368 DEBUG [http-nio-53060-exec-6][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 23:55:51,377 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 23:55:52,394 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 23:56:26,043 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[172.26.144.1:10909] result: true
[transaction-service][53060] 2022-07-10 23:56:29,383 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
