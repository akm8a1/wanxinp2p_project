[transaction-service][53060] 2022-07-10 20:54:48,298 INFO [main][DefaultApplicationProvider.java:85] - App ID is set to transaction-service by app.id property from System Property
[transaction-service][53060] 2022-07-10 20:54:48,305 INFO [main][DefaultServerProvider.java:108] - Environment is set to [dev] by JVM system property 'env'.
[transaction-service][53060] 2022-07-10 20:54:48,395 WARN [main][DefaultMetaServerProvider.java:39] - Could not find meta server address, because it is not available in neither (1) JVM system property 'apollo.meta', (2) OS env variable 'APOLLO_META' (3) property 'apollo.meta' from server.properties nor (4) property 'apollo.meta' from app.properties
[transaction-service][53060] 2022-07-10 20:54:48,403 INFO [main][MetaDomainConsts.java:93] - Located meta server address http://localhost:8080 for env DEV from com.ctrip.framework.apollo.core.internals.LegacyMetaServerProvider
[transaction-service][53060] 2022-07-10 20:54:50,480 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 20:54:51,498 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1 [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 20:54:51,505 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 20:54:52,524 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 20:54:52,534 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 20:54:53,550 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 20:54:54,566 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 20:54:54,576 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 20:54:55,588 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 20:54:55,590 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\transaction-service\config-cache\transaction-service+DEFAULT+micro_service.spring-cloud-feign.properties]
[transaction-service][53060] 2022-07-10 20:54:55,598 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 20:54:56,610 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-10 20:54:56,610 WARN [main][DefaultConfig.java:61] - Init Apollo Local Config failed - namespace: micro_service.spring-cloud-feign, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\transaction-service\config-cache\transaction-service+DEFAULT+micro_service.spring-cloud-feign.properties].
[transaction-service][53060] 2022-07-10 20:54:56,654 WARN [main][DefaultConfig.java:95] - Could not load config for namespace micro_service.spring-cloud-feign from Apollo, please check whether the configs are released in Apollo! Return default value now!
[transaction-service][53060] 2022-07-10 20:54:56,655 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[transaction-service][53060] 2022-07-10 20:54:59,265 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[transaction-service][53060] 2022-07-10 20:54:59,678 INFO [main][GenericScope.java:294] - BeanFactory id=abd3f24e-aec8-3cc6-849a-f7f4787b54d3
[transaction-service][53060] 2022-07-10 20:54:59,758 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.liu.wanxinp2p.transaction.agent.ConsumerServiceAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:54:59,760 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.liu.wanxinp2p.transaction.agent.ContentSearchApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:54:59,763 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.liu.wanxinp2p.transaction.agent.DepositoryAgentService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:54:59,798 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration$$EnhancerBySpringCGLIB$$cec7275a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:54:59,818 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketmq-org.apache.rocketmq.spring.autoconfigure.RocketMQProperties' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:02,403 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'defaultMQProducer' of type [org.apache.rocketmq.client.producer.DefaultMQProducer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:02,408 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$1c497ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:02,416 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$b4115a08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:02,423 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$6f283ff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:02,434 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:02,439 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:02,450 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$95f3b725] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:02,465 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:02,467 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$e3d0357e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:02,545 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:02,546 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:02,554 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:02,558 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:02,608 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:09,111 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketMQTemplate' of type [org.apache.rocketmq.spring.core.RocketMQTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:09,114 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'transactionHandlerRegistry' of type [org.apache.rocketmq.spring.config.TransactionHandlerRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:09,230 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a631185e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:09,303 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c24b1b5b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-10 20:55:10,132 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 53060 (http)
[transaction-service][53060] 2022-07-10 20:55:10,215 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-53060"]
[transaction-service][53060] 2022-07-10 20:55:10,240 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[transaction-service][53060] 2022-07-10 20:55:10,242 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[transaction-service][53060] 2022-07-10 20:55:10,265 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\jdk1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;E:\Ruby26-x64\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\VanDyke Software\Clients\;E:\Anaconda;E:\Anaconda\Library\mingw-w64\bin;E:\Anaconda\Library\usr\bin;E:\Anaconda\Library\bin;E:\Anaconda\Scripts;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;E:\mysql-5.7.20-winx64\bin;C:\Program Files\dotnet\;E:\nodejs\;C:\Users\Administrator\AppData\Roaming\npm;E:\nodejs\node_global\;C:\Program Files (x86)\Common Files\Thunder Network\KanKan\Codecs;E:\spark-2.1.1-hadoop2.7\bin;D:\Android\Sdk\platform-tools;E:\TortoiseSVN\bin;E:\TortoiseSVN\bin;E:\Subversion\bin;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;E:\CMake\bin;C:\mingw64\bin;E:\scala-2.12.15\bin;C:\Program Files (x86)\scala\bin;E:\spark\bin;E:\spark-2.1.1-hadoop2.7\bin;E:\NetSarang\Xshell 7\;E:\NetSarang\Xftp 7\;C:\Program Files\Git\cmd;E:\apache-maven-3.6.3\bin;E:\jdk1.8.0_161\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;E:\IntelliJ IDEA\bin;;C:\Users\Administrator\AppData\Roaming\npm;E:\nodejs\node_global\;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Microsoft VS Code\bin;.]
[transaction-service][53060] 2022-07-10 20:55:10,615 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[transaction-service][53060] 2022-07-10 20:55:10,615 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 13933 ms
[transaction-service][53060] 2022-07-10 20:55:10,848 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[transaction-service][53060] 2022-07-10 20:55:10,850 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[transaction-service][53060] 2022-07-10 20:55:10,885 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5d717f19
[transaction-service][53060] 2022-07-10 20:55:12,254 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[transaction-service][53060] 2022-07-10 20:55:12,557 INFO [main][DruidDataSource.java:1002] - {dataSource-2} inited
[transaction-service][53060] 2022-07-10 20:55:24,293 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[transaction-service][53060] 2022-07-10 20:55:24,479 INFO [main][PropertySourcedRequestMappingHandlerMapping.java:69] - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[transaction-service][53060] 2022-07-10 20:55:24,495 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[transaction-service][53060] 2022-07-10 20:55:24,496 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[transaction-service][53060] 2022-07-10 20:55:24,735 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[transaction-service][53060] 2022-07-10 20:55:28,684 INFO [main][InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
[transaction-service][53060] 2022-07-10 20:55:28,832 INFO [main][DiscoveryClient.java:349] - Initializing Eureka in region us-east-1
[transaction-service][53060] 2022-07-10 20:55:33,343 INFO [main][DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
[transaction-service][53060] 2022-07-10 20:55:33,344 INFO [main][DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
[transaction-service][53060] 2022-07-10 20:55:33,901 INFO [main][DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
[transaction-service][53060] 2022-07-10 20:55:33,902 INFO [main][DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
[transaction-service][53060] 2022-07-10 20:55:34,827 INFO [main][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[transaction-service][53060] 2022-07-10 20:55:36,285 INFO [main][DiscoveryClient.java:958] - Disable delta property : false
[transaction-service][53060] 2022-07-10 20:55:36,285 INFO [main][DiscoveryClient.java:959] - Single vip registry refresh property : null
[transaction-service][53060] 2022-07-10 20:55:36,286 INFO [main][DiscoveryClient.java:960] - Force full registry fetch : false
[transaction-service][53060] 2022-07-10 20:55:36,286 INFO [main][DiscoveryClient.java:961] - Application is null : false
[transaction-service][53060] 2022-07-10 20:55:36,287 INFO [main][DiscoveryClient.java:962] - Registered Applications size is zero : true
[transaction-service][53060] 2022-07-10 20:55:36,288 INFO [main][DiscoveryClient.java:964] - Application version is -1: true
[transaction-service][53060] 2022-07-10 20:55:36,288 INFO [main][DiscoveryClient.java:1047] - Getting all instance registry info from the eureka server
[transaction-service][53060] 2022-07-10 20:55:36,682 INFO [main][DiscoveryClient.java:1056] - The response status is 200
[transaction-service][53060] 2022-07-10 20:55:36,688 INFO [main][DiscoveryClient.java:1270] - Starting heartbeat executor: renew interval is: 30
[transaction-service][53060] 2022-07-10 20:55:36,694 INFO [main][InstanceInfoReplicator.java:60] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[transaction-service][53060] 2022-07-10 20:55:36,700 INFO [main][DiscoveryClient.java:449] - Discovery Client initialized at timestamp 1657457736698 with initial instances count: 8
[transaction-service][53060] 2022-07-10 20:55:36,702 INFO [main][EurekaServiceRegistry.java:42] - Registering application TRANSACTION-SERVICE with eureka with status UP
[transaction-service][53060] 2022-07-10 20:55:36,703 INFO [main][DiscoveryClient.java:1305] - Saw local status change event StatusChangeEvent [timestamp=1657457736703, current=UP, previous=STARTING]
[transaction-service][53060] 2022-07-10 20:55:36,706 INFO [main][DocumentationPluginsBootstrapper.java:160] - Context refreshed
[transaction-service][53060] 2022-07-10 20:55:36,707 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:192.168.1.4:53060: registering service...
[transaction-service][53060] 2022-07-10 20:55:36,729 INFO [main][DocumentationPluginsBootstrapper.java:163] - Found 1 custom documentation plugin(s)
[transaction-service][53060] 2022-07-10 20:55:36,769 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:192.168.1.4:53060 - registration status: 204
[transaction-service][53060] 2022-07-10 20:55:36,805 INFO [main][ApiListingReferenceScanner.java:41] - Scanning for api listing references
[transaction-service][53060] 2022-07-10 20:55:37,043 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: handleUsingGET_1
[transaction-service][53060] 2022-07-10 20:55:37,046 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: handleUsingGET_2
[transaction-service][53060] 2022-07-10 20:55:37,048 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: handleUsingGET_3
[transaction-service][53060] 2022-07-10 20:55:37,210 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: queryProjectsUsingPOST_1
[transaction-service][53060] 2022-07-10 20:55:37,278 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-53060"]
[transaction-service][53060] 2022-07-10 20:55:37,329 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 53060 (http) with context path '/transaction'
[transaction-service][53060] 2022-07-10 20:55:37,332 INFO [main][EurekaAutoServiceRegistration.java:141] - Updating port to 53060
[transaction-service][53060] 2022-07-10 20:55:37,337 INFO [main][StartupInfoLogger.java:59] - Started TransactionService in 55.152 seconds (JVM running for 59.962)
[transaction-service][53060] 2022-07-10 20:55:41,290 INFO [RMI TCP Connection(7)-172.26.144.1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[transaction-service][53060] 2022-07-10 20:55:41,290 INFO [RMI TCP Connection(7)-172.26.144.1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[transaction-service][53060] 2022-07-10 20:55:41,310 INFO [RMI TCP Connection(7)-172.26.144.1][FrameworkServlet.java:546] - Completed initialization in 20 ms
[transaction-service][53060] 2022-07-10 20:55:42,389 INFO [RMI TCP Connection(6)-172.26.144.1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 20:55:42,389 INFO [RMI TCP Connection(6)-172.26.144.1][SQLLogger.java:89] - Logic SQL: /* ping */ SELECT 1
[transaction-service][53060] 2022-07-10 20:55:42,389 INFO [RMI TCP Connection(6)-172.26.144.1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[], parametersIndex=0, logicSQL=/* ping */ SELECT 1)), containStar=false, firstSelectItemStartIndex=18, selectListStopIndex=18, groupByLastIndex=0, items=[CommonSelectItem(expression=1, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 20:55:42,390 INFO [RMI TCP Connection(6)-172.26.144.1][SQLLogger.java:89] - Actual SQL: ds1 ::: /* ping */ SELECT 1
[transaction-service][53060] 2022-07-10 20:56:12,915 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=? 
[transaction-service][53060] 2022-07-10 20:56:12,949 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: 1546109979008921602(Long)
[transaction-service][53060] 2022-07-10 20:56:13,119 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 20:56:13,119 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=?
[transaction-service][53060] 2022-07-10 20:56:13,120 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project WHERE ID=?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=216, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=MODIFY_DATE, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 20:56:13,121 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project_0 WHERE ID=? ::: [1546109979008921602]
[transaction-service][53060] 2022-07-10 20:56:13,122 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO,MODIFY_DATE FROM project_0 WHERE ID=? ::: [1546109979008921602]
[transaction-service][53060] 2022-07-10 20:56:13,182 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 20:56:13,279 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE FROM tender WHERE PROJECT_ID = ? 
[transaction-service][53060] 2022-07-10 20:56:13,285 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: 1546109979008921602(Long)
[transaction-service][53060] 2022-07-10 20:56:13,337 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 20:56:13,338 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender 
 
 WHERE PROJECT_ID = ?
[transaction-service][53060] 2022-07-10 20:56:13,340 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=PROJECT_ID, tableName=tender), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender 
 
 WHERE PROJECT_ID = ?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=168, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_USERNAME, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_ID, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=TENDER_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NAME, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_PERIOD, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_ANNUAL_RATE, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-10 20:56:13,341 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender_0 
 
 WHERE PROJECT_ID = ? ::: [1546109979008921602]
[transaction-service][53060] 2022-07-10 20:56:13,342 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,CONSUMER_USERNAME,USER_NO,PROJECT_ID,PROJECT_NO,AMOUNT,TENDER_STATUS,CREATE_DATE,REQUEST_NO,STATUS,PROJECT_NAME,PROJECT_PERIOD,PROJECT_ANNUAL_RATE  FROM tender_0 
 
 WHERE PROJECT_ID = ? ::: [1546109979008921602]
[transaction-service][53060] 2022-07-10 20:56:13,351 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - <==      Total: 1
[transaction-service][53060] 2022-07-10 20:56:13,387 WARN [http-nio-53060-exec-1][DefaultConfig.java:95] - Could not load config for namespace micro_service.spring-cloud-feign from Apollo, please check whether the configs are released in Apollo! Return default value now!
[transaction-service][53060] 2022-07-10 20:56:13,820 INFO [http-nio-53060-exec-1][ChainedDynamicProperty.java:115] - Flipping property: depository-agent-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[transaction-service][53060] 2022-07-10 20:56:13,904 INFO [http-nio-53060-exec-1][ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-depository-agent-service
[transaction-service][53060] 2022-07-10 20:56:13,907 INFO [http-nio-53060-exec-1][BaseLoadBalancer.java:197] - Client: depository-agent-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=depository-agent-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[transaction-service][53060] 2022-07-10 20:56:13,924 INFO [http-nio-53060-exec-1][DynamicServerListLoadBalancer.java:222] - Using serverListUpdater PollingServerListUpdater
[transaction-service][53060] 2022-07-10 20:56:13,981 INFO [http-nio-53060-exec-1][ChainedDynamicProperty.java:115] - Flipping property: depository-agent-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[transaction-service][53060] 2022-07-10 20:56:13,987 INFO [http-nio-53060-exec-1][DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client depository-agent-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=depository-agent-service,current list of Servers=[192.168.1.4:53070],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.4:53070;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7b857eb9
[transaction-service][53060] 2022-07-10 20:56:14,949 INFO [PollingServerListUpdater-0][ChainedDynamicProperty.java:115] - Flipping property: depository-agent-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[transaction-service][53060] 2022-07-10 20:56:16,526 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: UPDATE tender SET CONSUMER_ID=?, CONSUMER_USERNAME=?, USER_NO=?, PROJECT_ID=?, PROJECT_NO=?, AMOUNT=?, TENDER_STATUS=?, CREATE_DATE=?, REQUEST_NO=?, STATUS=?, PROJECT_PERIOD=?, PROJECT_ANNUAL_RATE=? WHERE ID=? 
[transaction-service][53060] 2022-07-10 20:56:16,532 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: 1001(Long), 15378791981(String), USR_3525C3F56E36416B9FA7696619E2F96Y(String), 1546109979008921602(Long), 令狐泽银先生第2次借款(String), 6000(BigDecimal), LOAN(String), 2022-07-10 20:33:38.0(Timestamp), REQ_6231805C2F9B48AF885472C26E77272B(String), 1(Integer), 180(Integer), 0.00(BigDecimal), 1546110394077245442(Long)
[transaction-service][53060] 2022-07-10 20:56:16,562 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-10 20:56:16,564 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?
[transaction-service][53060] 2022-07-10 20:56:16,564 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=tender, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=tender, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=13, logicSQL=UPDATE tender  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=?), deleteStatement=false, updateTableAlias={tender=tender}, updateColumnValues={Column(name=CONSUMER_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@663b1284, Column(name=CONSUMER_USERNAME, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@83f888a, Column(name=USER_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@3f8e01b9, Column(name=PROJECT_ID, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@49a03087, Column(name=PROJECT_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@7731b405, Column(name=AMOUNT, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@3be09b1, Column(name=TENDER_STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4cf243b6, Column(name=CREATE_DATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@41e76a7, Column(name=REQUEST_NO, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@7ef57bbd, Column(name=STATUS, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@df50653, Column(name=PROJECT_PERIOD, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@53440ba8, Column(name=PROJECT_ANNUAL_RATE, tableName=tender)=org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@2418f429}, whereStartIndex=202, whereStopIndex=211, whereParameterStartIndex=12, whereParameterEndIndex=12)
[transaction-service][53060] 2022-07-10 20:56:16,565 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1001, 15378791981, USR_3525C3F56E36416B9FA7696619E2F96Y, 1546109979008921602, 令狐泽银先生第2次借款, 6000, LOAN, 2022-07-10T20:33:38.000+0800, REQ_6231805C2F9B48AF885472C26E77272B, 1, 180, 0.00, 1546110394077245442]
[transaction-service][53060] 2022-07-10 20:56:16,566 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1001, 15378791981, USR_3525C3F56E36416B9FA7696619E2F96Y, 1546109979008921602, 令狐泽银先生第2次借款, 6000, LOAN, 2022-07-10T20:33:38.000+0800, REQ_6231805C2F9B48AF885472C26E77272B, 1, 180, 0.00, 1546110394077245442]
[transaction-service][53060] 2022-07-10 20:56:16,567 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_0  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1001, 15378791981, USR_3525C3F56E36416B9FA7696619E2F96Y, 1546109979008921602, 令狐泽银先生第2次借款, 6000, LOAN, 2022-07-10T20:33:38.000+0800, REQ_6231805C2F9B48AF885472C26E77272B, 1, 180, 0.00, 1546110394077245442]
[transaction-service][53060] 2022-07-10 20:56:16,568 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: UPDATE tender_1  SET CONSUMER_ID=?,
CONSUMER_USERNAME=?,
USER_NO=?,
PROJECT_ID=?,
PROJECT_NO=?,
AMOUNT=?,
TENDER_STATUS=?,
CREATE_DATE=?,
REQUEST_NO=?,
STATUS=?,

PROJECT_PERIOD=?,
PROJECT_ANNUAL_RATE=?  WHERE ID=? ::: [1001, 15378791981, USR_3525C3F56E36416B9FA7696619E2F96Y, 1546109979008921602, 令狐泽银先生第2次借款, 6000, LOAN, 2022-07-10T20:33:38.000+0800, REQ_6231805C2F9B48AF885472C26E77272B, 1, 180, 0.00, 1546110394077245442]
[transaction-service][53060] 2022-07-10 20:56:16,584 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - <==    Updates: 1
[transaction-service][53060] 2022-07-10 20:56:16,663 WARN [http-nio-53060-exec-1][ProjectServiceImpl.java:419] - 审核满标放款失败!标的ID为:1546109979008921602,存管代理服务返回的状态为:00000
[transaction-service][53060] 2022-07-10 20:59:51,526 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-10 20:59:52,546 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
