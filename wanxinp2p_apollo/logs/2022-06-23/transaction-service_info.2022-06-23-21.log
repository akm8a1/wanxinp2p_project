[transaction-service][53060] 2022-06-23 21:35:32,441 INFO [main][DefaultApplicationProvider.java:85] - App ID is set to transaction-service by app.id property from System Property
[transaction-service][53060] 2022-06-23 21:35:32,451 INFO [main][DefaultServerProvider.java:108] - Environment is set to [dev] by JVM system property 'env'.
[transaction-service][53060] 2022-06-23 21:35:32,536 WARN [main][DefaultMetaServerProvider.java:39] - Could not find meta server address, because it is not available in neither (1) JVM system property 'apollo.meta', (2) OS env variable 'APOLLO_META' (3) property 'apollo.meta' from server.properties nor (4) property 'apollo.meta' from app.properties
[transaction-service][53060] 2022-06-23 21:35:32,548 INFO [main][MetaDomainConsts.java:93] - Located meta server address http://localhost:8080 for env DEV from com.ctrip.framework.apollo.core.internals.LegacyMetaServerProvider
[transaction-service][53060] 2022-06-23 21:35:35,088 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-06-23 21:35:36,122 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.0.8:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.18.112.1 [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-06-23 21:35:36,140 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-06-23 21:35:37,163 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.0.8:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.18.112.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-06-23 21:35:37,175 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-06-23 21:35:38,197 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-06-23 21:35:39,219 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.0.8:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.18.112.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-06-23 21:35:39,234 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-06-23 21:35:40,264 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.0.8:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.18.112.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-06-23 21:35:40,265 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\transaction-service\config-cache\transaction-service+DEFAULT+micro_service.spring-cloud-feign.properties]
[transaction-service][53060] 2022-06-23 21:35:40,283 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-06-23 21:35:41,307 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.0.8:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.18.112.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-06-23 21:35:41,308 WARN [main][DefaultConfig.java:61] - Init Apollo Local Config failed - namespace: micro_service.spring-cloud-feign, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\transaction-service\config-cache\transaction-service+DEFAULT+micro_service.spring-cloud-feign.properties].
[transaction-service][53060] 2022-06-23 21:35:41,358 WARN [main][DefaultConfig.java:95] - Could not load config for namespace micro_service.spring-cloud-feign from Apollo, please check whether the configs are released in Apollo! Return default value now!
[transaction-service][53060] 2022-06-23 21:35:41,359 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[transaction-service][53060] 2022-06-23 21:35:42,906 WARN [main][Logger.java:44] - No MyBatis mapper was found in '[cn.itcast.wanxinp2p.**.mapper]' package. Please check your configuration.
[transaction-service][53060] 2022-06-23 21:35:44,050 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[transaction-service][53060] 2022-06-23 21:35:44,492 INFO [main][GenericScope.java:294] - BeanFactory id=25784778-2b30-3c67-9458-06b7ea0e3018
[transaction-service][53060] 2022-06-23 21:35:44,611 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.liu.wanxinp2p.transaction.agent.ConsumerServiceAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-06-23 21:35:44,909 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$45a6176d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-06-23 21:35:44,969 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$61c01a6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-06-23 21:35:45,680 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 53060 (http)
[transaction-service][53060] 2022-06-23 21:35:45,725 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-53060"]
[transaction-service][53060] 2022-06-23 21:35:45,743 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[transaction-service][53060] 2022-06-23 21:35:45,745 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[transaction-service][53060] 2022-06-23 21:35:45,767 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\jdk1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\VanDyke Software\Clients\;E:\Anaconda;E:\Anaconda\Library\mingw-w64\bin;E:\Anaconda\Library\usr\bin;E:\Anaconda\Library\bin;E:\Anaconda\Scripts;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;E:\mysql-5.7.20-winx64\bin;C:\Program Files\dotnet\;E:\nodejs\;C:\Users\Administrator\AppData\Roaming\npm;E:\nodejs\node_global\;C:\Program Files (x86)\Common Files\Thunder Network\KanKan\Codecs;E:\spark-2.1.1-hadoop2.7\bin;D:\Android\Sdk\platform-tools;E:\TortoiseSVN\bin;E:\TortoiseSVN\bin;E:\Subversion\bin;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;E:\CMake\bin;C:\mingw64\bin;E:\scala-2.12.15\bin;C:\Program Files (x86)\scala\bin;E:\spark\bin;E:\spark-2.1.1-hadoop2.7\bin;E:\NetSarang\Xshell 7\;E:\NetSarang\Xftp 7\;C:\Program Files\Git\cmd;E:\apache-maven-3.6.3\bin;E:\jdk1.8.0_161\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;E:\IntelliJ IDEA\bin;;C:\Users\Administrator\AppData\Roaming\npm;E:\nodejs\node_global\;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Microsoft VS Code\bin;.]
[transaction-service][53060] 2022-06-23 21:35:46,157 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[transaction-service][53060] 2022-06-23 21:35:46,158 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 4766 ms
[transaction-service][53060] 2022-06-23 21:35:46,460 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[transaction-service][53060] 2022-06-23 21:35:46,462 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[transaction-service][53060] 2022-06-23 21:35:46,502 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@19f02280
[transaction-service][53060] 2022-06-23 21:35:48,029 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[transaction-service][53060] 2022-06-23 21:35:48,353 INFO [main][DruidDataSource.java:1002] - {dataSource-2} inited
[transaction-service][53060] 2022-06-23 21:35:53,178 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[transaction-service][53060] 2022-06-23 21:35:53,179 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[transaction-service][53060] 2022-06-23 21:35:53,616 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[transaction-service][53060] 2022-06-23 21:35:55,094 INFO [main][StdSchedulerFactory.java:1208] - Using default implementation for ThreadExecutor
[transaction-service][53060] 2022-06-23 21:35:55,120 INFO [main][SchedulerSignalerImpl.java:61] - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
[transaction-service][53060] 2022-06-23 21:35:55,121 INFO [main][QuartzScheduler.java:229] - Quartz Scheduler v.2.3.0 created.
[transaction-service][53060] 2022-06-23 21:35:55,123 INFO [main][RAMJobStore.java:155] - RAMJobStore initialized.
[transaction-service][53060] 2022-06-23 21:35:55,124 INFO [main][QuartzScheduler.java:294] - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

[transaction-service][53060] 2022-06-23 21:35:55,124 INFO [main][StdSchedulerFactory.java:1362] - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
[transaction-service][53060] 2022-06-23 21:35:55,125 INFO [main][StdSchedulerFactory.java:1366] - Quartz scheduler version: 2.3.0
[transaction-service][53060] 2022-06-23 21:35:55,125 INFO [main][QuartzScheduler.java:2287] - JobFactory set to: org.springframework.scheduling.quartz.SpringBeanJobFactory@9147ba2
[transaction-service][53060] 2022-06-23 21:35:57,588 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[transaction-service][53060] 2022-06-23 21:35:57,844 INFO [main][InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
[transaction-service][53060] 2022-06-23 21:35:57,934 INFO [main][DiscoveryClient.java:349] - Initializing Eureka in region us-east-1
[transaction-service][53060] 2022-06-23 21:35:59,664 INFO [main][DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
[transaction-service][53060] 2022-06-23 21:35:59,665 INFO [main][DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
[transaction-service][53060] 2022-06-23 21:36:00,062 INFO [main][DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
[transaction-service][53060] 2022-06-23 21:36:00,063 INFO [main][DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
[transaction-service][53060] 2022-06-23 21:36:00,642 INFO [main][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[transaction-service][53060] 2022-06-23 21:36:01,906 INFO [main][DiscoveryClient.java:958] - Disable delta property : false
[transaction-service][53060] 2022-06-23 21:36:01,907 INFO [main][DiscoveryClient.java:959] - Single vip registry refresh property : null
[transaction-service][53060] 2022-06-23 21:36:01,907 INFO [main][DiscoveryClient.java:960] - Force full registry fetch : false
[transaction-service][53060] 2022-06-23 21:36:01,908 INFO [main][DiscoveryClient.java:961] - Application is null : false
[transaction-service][53060] 2022-06-23 21:36:01,908 INFO [main][DiscoveryClient.java:962] - Registered Applications size is zero : true
[transaction-service][53060] 2022-06-23 21:36:01,909 INFO [main][DiscoveryClient.java:964] - Application version is -1: true
[transaction-service][53060] 2022-06-23 21:36:01,909 INFO [main][DiscoveryClient.java:1047] - Getting all instance registry info from the eureka server
[transaction-service][53060] 2022-06-23 21:36:02,439 INFO [main][DiscoveryClient.java:1056] - The response status is 200
[transaction-service][53060] 2022-06-23 21:36:02,451 INFO [main][DiscoveryClient.java:1270] - Starting heartbeat executor: renew interval is: 30
[transaction-service][53060] 2022-06-23 21:36:02,458 INFO [main][InstanceInfoReplicator.java:60] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[transaction-service][53060] 2022-06-23 21:36:02,468 INFO [main][DiscoveryClient.java:449] - Discovery Client initialized at timestamp 1655991362465 with initial instances count: 6
[transaction-service][53060] 2022-06-23 21:36:02,472 INFO [main][EurekaServiceRegistry.java:42] - Registering application TRANSACTION-SERVICE with eureka with status UP
[transaction-service][53060] 2022-06-23 21:36:02,472 INFO [main][DiscoveryClient.java:1305] - Saw local status change event StatusChangeEvent [timestamp=1655991362472, current=UP, previous=STARTING]
[transaction-service][53060] 2022-06-23 21:36:02,476 INFO [main][SchedulerFactoryBean.java:726] - Starting Quartz Scheduler now
[transaction-service][53060] 2022-06-23 21:36:02,477 INFO [main][QuartzScheduler.java:547] - Scheduler quartzScheduler_$_NON_CLUSTERED started.
[transaction-service][53060] 2022-06-23 21:36:02,479 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:192.168.0.8:53060: registering service...
[transaction-service][53060] 2022-06-23 21:36:02,554 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-53060"]
[transaction-service][53060] 2022-06-23 21:36:02,601 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:192.168.0.8:53060 - registration status: 204
[transaction-service][53060] 2022-06-23 21:36:02,614 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 53060 (http) with context path '/transaction'
[transaction-service][53060] 2022-06-23 21:36:02,616 INFO [main][EurekaAutoServiceRegistration.java:141] - Updating port to 53060
[transaction-service][53060] 2022-06-23 21:36:02,622 INFO [main][StartupInfoLogger.java:59] - Started TransactionService in 41.823 seconds (JVM running for 50.152)
[transaction-service][53060] 2022-06-23 21:36:08,723 INFO [RMI TCP Connection(2)-172.18.112.1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[transaction-service][53060] 2022-06-23 21:36:08,726 INFO [RMI TCP Connection(2)-172.18.112.1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[transaction-service][53060] 2022-06-23 21:36:08,828 INFO [RMI TCP Connection(2)-172.18.112.1][FrameworkServlet.java:546] - Completed initialization in 101 ms
[transaction-service][53060] 2022-06-23 21:36:12,361 INFO [RMI TCP Connection(3)-172.18.112.1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-06-23 21:36:12,361 INFO [RMI TCP Connection(3)-172.18.112.1][SQLLogger.java:89] - Logic SQL: /* ping */ SELECT 1
[transaction-service][53060] 2022-06-23 21:36:12,362 INFO [RMI TCP Connection(3)-172.18.112.1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[], parametersIndex=0, logicSQL=/* ping */ SELECT 1)), containStar=false, firstSelectItemStartIndex=18, selectListStopIndex=18, groupByLastIndex=0, items=[CommonSelectItem(expression=1, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-06-23 21:36:12,363 INFO [RMI TCP Connection(3)-172.18.112.1][SQLLogger.java:89] - Actual SQL: ds0 ::: /* ping */ SELECT 1
[transaction-service][53060] 2022-06-23 21:36:25,544 INFO [http-nio-53060-exec-1][ChainedDynamicProperty.java:115] - Flipping property: consumer-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[transaction-service][53060] 2022-06-23 21:36:25,596 INFO [http-nio-53060-exec-1][ShutdownEnabledTimer.java:58] - Shutdown hook installed for: NFLoadBalancer-PingTimer-consumer-service
[transaction-service][53060] 2022-06-23 21:36:25,600 INFO [http-nio-53060-exec-1][BaseLoadBalancer.java:197] - Client: consumer-service instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=consumer-service,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[transaction-service][53060] 2022-06-23 21:36:25,613 INFO [http-nio-53060-exec-1][DynamicServerListLoadBalancer.java:222] - Using serverListUpdater PollingServerListUpdater
[transaction-service][53060] 2022-06-23 21:36:25,654 INFO [http-nio-53060-exec-1][ChainedDynamicProperty.java:115] - Flipping property: consumer-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[transaction-service][53060] 2022-06-23 21:36:25,658 INFO [http-nio-53060-exec-1][DynamicServerListLoadBalancer.java:150] - DynamicServerListLoadBalancer for client consumer-service initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=consumer-service,current list of Servers=[192.168.0.8:53050],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.0.8:53050;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@422f4cad
[transaction-service][53060] 2022-06-23 21:36:26,322 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-06-23 21:36:26,322 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: SELECT COUNT( 1 ) FROM project 
 
 WHERE CONSUMER_ID = ?
[transaction-service][53060] 2022-06-23 21:36:26,323 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=CONSUMER_ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT( 1 ) FROM project 
 
 WHERE CONSUMER_ID = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=16, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=( 1 ), alias=Optional.absent(), derivedAggregationSelectItems=[], index=-1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-06-23 21:36:26,323 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT( 1 ) FROM project_0 
 
 WHERE CONSUMER_ID = ? ::: [1004]
[transaction-service][53060] 2022-06-23 21:36:26,325 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT( 1 ) FROM project_1 
 
 WHERE CONSUMER_ID = ? ::: [1004]
[transaction-service][53060] 2022-06-23 21:36:26,625 INFO [PollingServerListUpdater-0][ChainedDynamicProperty.java:115] - Flipping property: consumer-service.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[transaction-service][53060] 2022-06-23 21:36:27,561 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-06-23 21:36:27,562 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: INSERT INTO project  ( ID,
CONSUMER_ID,
USER_NO,
PROJECT_NO,
NAME,
DESCRIPTION,
TYPE,
PERIOD,
ANNUAL_RATE,
BORROWER_ANNUAL_RATE,
COMMISSION_ANNUAL_RATE,
REPAYMENT_WAY,
AMOUNT,
PROJECT_STATUS,
CREATE_DATE,
STATUS,
IS_ASSIGNMENT )  VALUES  ( ?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
? )
[transaction-service][53060] 2022-06-23 21:36:27,562 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0}), Condition(column=Column(name=CONSUMER_ID, tableName=project), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=1})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=21)], parametersIndex=17, logicSQL=INSERT INTO project  ( ID,
CONSUMER_ID,
USER_NO,
PROJECT_NO,
NAME,
DESCRIPTION,
TYPE,
PERIOD,
ANNUAL_RATE,
BORROWER_ANNUAL_RATE,
COMMISSION_ANNUAL_RATE,
REPAYMENT_WAY,
AMOUNT,
PROJECT_STATUS,
CREATE_DATE,
STATUS,
IS_ASSIGNMENT )  VALUES  ( ?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
? )), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[ID, CONSUMER_ID, USER_NO, PROJECT_NO, NAME, DESCRIPTION, TYPE, PERIOD, ANNUAL_RATE, BORROWER_ANNUAL_RATE, COMMISSION_ANNUAL_RATE, REPAYMENT_WAY, AMOUNT, PROJECT_STATUS, CREATE_DATE, STATUS, IS_ASSIGNMENT], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@7a266962, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@3545c503, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@80f305d, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1d4b0b41, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@54ef1cf3, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4f99b6b0, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@3ee5fac6, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@7bb1ef58, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@57156c59, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@553b6c3d, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@44198f96, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@30267362, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4c2da69b, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@427971a7, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4a142341, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@49aaf402, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@68929ad2])])
[transaction-service][53060] 2022-06-23 21:36:27,563 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: INSERT INTO project_1   (ID, CONSUMER_ID, USER_NO, PROJECT_NO, NAME, DESCRIPTION, TYPE, PERIOD, ANNUAL_RATE, BORROWER_ANNUAL_RATE, COMMISSION_ANNUAL_RATE, REPAYMENT_WAY, AMOUNT, PROJECT_STATUS, CREATE_DATE, STATUS, IS_ASSIGNMENT) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ::: [1539965610890932225, 1004, USR_3525C3F56E36416B9FA7696619E2F05P, PRO_52E6C6A55B554FF9ACE09352077DC3C1, 令狐泽银先生第1次借款, 个人生活消费, NEW, 360, 0.15, 0.15, 0, FIXED_REPAYMENT, 8000, COLLECTING, 2022-06-23T21:36:25.878+0800, 0, 0]
[transaction-service][53060] 2022-06-23 21:36:59,544 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-06-23 21:36:59,545 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Logic SQL: SELECT COUNT( 1 ) FROM project 
 
 WHERE CONSUMER_ID = ?
[transaction-service][53060] 2022-06-23 21:36:59,546 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=CONSUMER_ID, tableName=project), operator=EQUAL, compareOperator==, positionValueMap={}, positionIndexMap={0=0})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT( 1 ) FROM project 
 
 WHERE CONSUMER_ID = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=16, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=( 1 ), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-06-23 21:36:59,547 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT( 1 ) FROM project_0 
 
 WHERE CONSUMER_ID = ? ::: [1004]
[transaction-service][53060] 2022-06-23 21:36:59,547 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT( 1 ) FROM project_1 
 
 WHERE CONSUMER_ID = ? ::: [1004]
[transaction-service][53060] 2022-06-23 21:36:59,558 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-06-23 21:36:59,559 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Logic SQL: INSERT INTO project  ( ID,
CONSUMER_ID,
USER_NO,
PROJECT_NO,
NAME,
DESCRIPTION,
TYPE,
PERIOD,
ANNUAL_RATE,
BORROWER_ANNUAL_RATE,
COMMISSION_ANNUAL_RATE,
REPAYMENT_WAY,
AMOUNT,
PROJECT_STATUS,
CREATE_DATE,
STATUS,
IS_ASSIGNMENT )  VALUES  ( ?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
? )
[transaction-service][53060] 2022-06-23 21:36:59,560 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - SQLStatement: InsertStatement(super=DMLStatement(super=AbstractSQLStatement(type=DML, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[AndCondition(conditions=[Condition(column=Column(name=ID, tableName=project), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=0}), Condition(column=Column(name=CONSUMER_ID, tableName=project), operator=EQUAL, compareOperator=null, positionValueMap={}, positionIndexMap={0=1})])])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0), SQLToken(startIndex=21)], parametersIndex=17, logicSQL=INSERT INTO project  ( ID,
CONSUMER_ID,
USER_NO,
PROJECT_NO,
NAME,
DESCRIPTION,
TYPE,
PERIOD,
ANNUAL_RATE,
BORROWER_ANNUAL_RATE,
COMMISSION_ANNUAL_RATE,
REPAYMENT_WAY,
AMOUNT,
PROJECT_STATUS,
CREATE_DATE,
STATUS,
IS_ASSIGNMENT )  VALUES  ( ?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
?,
? )), deleteStatement=false, updateTableAlias={}, updateColumnValues={}, whereStartIndex=0, whereStopIndex=0, whereParameterStartIndex=0, whereParameterEndIndex=0), columnNames=[ID, CONSUMER_ID, USER_NO, PROJECT_NO, NAME, DESCRIPTION, TYPE, PERIOD, ANNUAL_RATE, BORROWER_ANNUAL_RATE, COMMISSION_ANNUAL_RATE, REPAYMENT_WAY, AMOUNT, PROJECT_STATUS, CREATE_DATE, STATUS, IS_ASSIGNMENT], values=[InsertValue(columnValues=[org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@7a266962, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@3545c503, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@80f305d, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@1d4b0b41, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@54ef1cf3, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4f99b6b0, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@3ee5fac6, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@7bb1ef58, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@57156c59, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@553b6c3d, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@44198f96, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@30267362, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4c2da69b, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@427971a7, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@4a142341, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@49aaf402, org.apache.shardingsphere.core.parse.old.parser.expression.SQLPlaceholderExpression@68929ad2])])
[transaction-service][53060] 2022-06-23 21:36:59,560 INFO [http-nio-53060-exec-2][SQLLogger.java:89] - Actual SQL: ds0 ::: INSERT INTO project_0   (ID, CONSUMER_ID, USER_NO, PROJECT_NO, NAME, DESCRIPTION, TYPE, PERIOD, ANNUAL_RATE, BORROWER_ANNUAL_RATE, COMMISSION_ANNUAL_RATE, REPAYMENT_WAY, AMOUNT, PROJECT_STATUS, CREATE_DATE, STATUS, IS_ASSIGNMENT) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ::: [1539965745452593154, 1004, USR_3525C3F56E36416B9FA7696619E2F05P, PRO_0ED951AB79AC41E299F68C3617A5E2AF, 令狐泽银先生第2次借款, 个人生活消费, NEW, 180, 0.15, 0.15, 0, FIXED_REPAYMENT, 6200, COLLECTING, 2022-06-23T21:36:59.539+0800, 0, 0]
[transaction-service][53060] 2022-06-23 21:37:18,354 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-06-23 21:37:18,355 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Logic SQL: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?
[transaction-service][53060] 2022-06-23 21:37:18,356 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=14, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=(1), alias=Optional.absent(), derivedAggregationSelectItems=[], index=-1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-06-23 21:37:18,358 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-06-23 21:37:18,360 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-06-23 21:37:18,361 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-06-23 21:37:18,363 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-06-23 21:37:18,582 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-06-23 21:37:18,583 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?
[transaction-service][53060] 2022-06-23 21:37:18,584 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=194, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(CREATE_DATE), orderDirection=DESC, nullOrderDirection=ASC, index=-1, expression=null, alias=Optional.absent())], limit=Limit(offset=LimitValue(value=-1, index=1, boundOpened=false), rowCount=LimitValue(value=-1, index=2, boundOpened=false)), subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-06-23 21:37:18,588 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-06-23 21:37:18,589 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-06-23 21:37:18,590 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-06-23 21:37:18,591 INFO [http-nio-53060-exec-3][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-06-23 21:39:40,907 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-06-23 21:39:40,909 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Logic SQL: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?
[transaction-service][53060] 2022-06-23 21:39:40,910 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=14, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=(1), alias=Optional.absent(), derivedAggregationSelectItems=[], index=1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-06-23 21:39:40,912 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-06-23 21:39:40,917 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-06-23 21:39:40,922 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-06-23 21:39:40,926 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-06-23 21:39:41,042 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-06-23 21:39:41,044 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?
[transaction-service][53060] 2022-06-23 21:39:41,047 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=194, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(CREATE_DATE), orderDirection=DESC, nullOrderDirection=ASC, index=15, expression=null, alias=Optional.absent())], limit=Limit(offset=LimitValue(value=-1, index=1, boundOpened=false), rowCount=LimitValue(value=-1, index=2, boundOpened=false)), subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-06-23 21:39:41,049 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-06-23 21:39:41,051 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-06-23 21:39:41,053 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-06-23 21:39:41,056 INFO [http-nio-53060-exec-5][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-06-23 21:40:36,137 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-06-23 21:40:37,153 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.0.8:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.18.112.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-06-23 21:41:01,926 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[transaction-service][53060] 2022-06-23 21:45:36,176 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-06-23 21:45:37,220 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.0.8:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.18.112.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-06-23 21:46:01,931 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[transaction-service][53060] 2022-06-23 21:50:36,144 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-06-23 21:50:37,164 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.0.8:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.18.112.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-06-23 21:51:01,943 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[transaction-service][53060] 2022-06-23 21:55:36,148 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-06-23 21:55:37,174 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.0.8:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.18.112.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-06-23 21:56:01,953 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
