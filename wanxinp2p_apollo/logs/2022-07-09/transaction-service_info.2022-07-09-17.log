[transaction-service][53060] 2022-07-09 17:54:58,062 INFO [main][DefaultApplicationProvider.java:85] - App ID is set to transaction-service by app.id property from System Property
[transaction-service][53060] 2022-07-09 17:54:58,075 INFO [main][DefaultServerProvider.java:108] - Environment is set to [dev] by JVM system property 'env'.
[transaction-service][53060] 2022-07-09 17:54:58,188 WARN [main][DefaultMetaServerProvider.java:39] - Could not find meta server address, because it is not available in neither (1) JVM system property 'apollo.meta', (2) OS env variable 'APOLLO_META' (3) property 'apollo.meta' from server.properties nor (4) property 'apollo.meta' from app.properties
[transaction-service][53060] 2022-07-09 17:54:58,201 INFO [main][MetaDomainConsts.java:93] - Located meta server address http://localhost:8080 for env DEV from com.ctrip.framework.apollo.core.internals.LegacyMetaServerProvider
[transaction-service][53060] 2022-07-09 17:55:00,478 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-09 17:55:01,497 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1 [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-09 17:55:01,506 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-09 17:55:02,521 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-09 17:55:02,531 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-09 17:55:03,552 WARN [Apollo-RemoteConfigRepository-1][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-09 17:55:04,575 WARN [Apollo-RemoteConfigRepository-1][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-09 17:55:04,587 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-09 17:55:05,601 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-09 17:55:05,602 WARN [main][AbstractConfigRepository.java:26] - Sync config failed, will retry. Repository class com.ctrip.framework.apollo.internals.LocalFileConfigRepository, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\transaction-service\config-cache\transaction-service+DEFAULT+micro_service.spring-cloud-feign.properties]
[transaction-service][53060] 2022-07-09 17:55:05,609 WARN [main][RemoteConfigRepository.java:194] - Load config failed, will retry in 1 SECONDS. appId: transaction-service, cluster: DEFAULT, namespaces: micro_service.spring-cloud-feign
[transaction-service][53060] 2022-07-09 17:55:06,629 WARN [main][LocalFileConfigRepository.java:167] - Sync config from upstream repository class com.ctrip.framework.apollo.internals.RemoteConfigRepository failed, reason: Load Apollo Config failed - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, url: http://192.168.1.4:8080/configs/transaction-service/DEFAULT/micro_service.spring-cloud-feign?ip=172.26.144.1&messages=%7B%22details%22%3A%7B%22transaction-service%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A285%2C%22common-template%2Bdefault%2Bmicro_service.spring-cloud-feign%22%3A403%7D%7D [Cause: [status code: 404] Could not find config for namespace - appId: transaction-service, cluster: DEFAULT, namespace: micro_service.spring-cloud-feign, please check whether the configs are released in Apollo!]
[transaction-service][53060] 2022-07-09 17:55:06,630 WARN [main][DefaultConfig.java:61] - Init Apollo Local Config failed - namespace: micro_service.spring-cloud-feign, reason: Load config from local config failed! [Cause: Cannot read from local cache file C:\opt\data\transaction-service\config-cache\transaction-service+DEFAULT+micro_service.spring-cloud-feign.properties].
[transaction-service][53060] 2022-07-09 17:55:06,675 WARN [main][DefaultConfig.java:95] - Could not load config for namespace micro_service.spring-cloud-feign from Apollo, please check whether the configs are released in Apollo! Return default value now!
[transaction-service][53060] 2022-07-09 17:55:06,676 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[transaction-service][53060] 2022-07-09 17:55:09,362 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[transaction-service][53060] 2022-07-09 17:55:09,717 INFO [main][GenericScope.java:294] - BeanFactory id=abd3f24e-aec8-3cc6-849a-f7f4787b54d3
[transaction-service][53060] 2022-07-09 17:55:09,790 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.liu.wanxinp2p.transaction.agent.ConsumerServiceAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:09,792 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.liu.wanxinp2p.transaction.agent.ContentSearchApiAgent' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:09,795 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.liu.wanxinp2p.transaction.agent.DepositoryAgentService' of type [org.springframework.cloud.openfeign.FeignClientFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:09,835 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration$$EnhancerBySpringCGLIB$$7fec41ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:09,854 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketmq-org.apache.rocketmq.spring.autoconfigure.RocketMQProperties' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:11,285 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'defaultMQProducer' of type [org.apache.rocketmq.client.producer.DefaultMQProducer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:11,289 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$b2e9b241] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:11,294 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$6536745a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:11,301 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$204d5a49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:11,309 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:11,312 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:11,321 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$4718d177] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:11,331 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:11,333 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$94f54fd0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:11,388 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:11,389 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:11,396 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:11,400 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:11,439 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:15,522 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketMQTemplate' of type [org.apache.rocketmq.spring.core.RocketMQTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:15,525 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'transactionHandlerRegistry' of type [org.apache.rocketmq.spring.config.TransactionHandlerRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:15,640 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$575632b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:15,688 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$737035ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[transaction-service][53060] 2022-07-09 17:55:16,358 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 53060 (http)
[transaction-service][53060] 2022-07-09 17:55:16,388 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-53060"]
[transaction-service][53060] 2022-07-09 17:55:16,402 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[transaction-service][53060] 2022-07-09 17:55:16,403 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[transaction-service][53060] 2022-07-09 17:55:16,415 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\jdk1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;E:\Ruby26-x64\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\VanDyke Software\Clients\;E:\Anaconda;E:\Anaconda\Library\mingw-w64\bin;E:\Anaconda\Library\usr\bin;E:\Anaconda\Library\bin;E:\Anaconda\Scripts;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;E:\mysql-5.7.20-winx64\bin;C:\Program Files\dotnet\;E:\nodejs\;C:\Users\Administrator\AppData\Roaming\npm;E:\nodejs\node_global\;C:\Program Files (x86)\Common Files\Thunder Network\KanKan\Codecs;E:\spark-2.1.1-hadoop2.7\bin;D:\Android\Sdk\platform-tools;E:\TortoiseSVN\bin;E:\TortoiseSVN\bin;E:\Subversion\bin;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;E:\CMake\bin;C:\mingw64\bin;E:\scala-2.12.15\bin;C:\Program Files (x86)\scala\bin;E:\spark\bin;E:\spark-2.1.1-hadoop2.7\bin;E:\NetSarang\Xshell 7\;E:\NetSarang\Xftp 7\;C:\Program Files\Git\cmd;E:\apache-maven-3.6.3\bin;E:\jdk1.8.0_161\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;E:\IntelliJ IDEA\bin;;C:\Users\Administrator\AppData\Roaming\npm;E:\nodejs\node_global\;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Microsoft VS Code\bin;.]
[transaction-service][53060] 2022-07-09 17:55:16,662 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[transaction-service][53060] 2022-07-09 17:55:16,662 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 9959 ms
[transaction-service][53060] 2022-07-09 17:55:16,840 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[transaction-service][53060] 2022-07-09 17:55:16,842 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[transaction-service][53060] 2022-07-09 17:55:16,864 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5563bb40
[transaction-service][53060] 2022-07-09 17:55:17,858 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:55:17,858 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:55:17,937 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[transaction-service][53060] 2022-07-09 17:55:18,154 INFO [main][DruidDataSource.java:1002] - {dataSource-2} inited
[transaction-service][53060] 2022-07-09 17:55:22,948 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[transaction-service][53060] 2022-07-09 17:55:23,086 INFO [main][PropertySourcedRequestMappingHandlerMapping.java:69] - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[transaction-service][53060] 2022-07-09 17:55:23,101 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[transaction-service][53060] 2022-07-09 17:55:23,102 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[transaction-service][53060] 2022-07-09 17:55:23,277 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[transaction-service][53060] 2022-07-09 17:55:25,608 INFO [main][InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
[transaction-service][53060] 2022-07-09 17:55:25,677 INFO [main][DiscoveryClient.java:349] - Initializing Eureka in region us-east-1
[transaction-service][53060] 2022-07-09 17:55:26,806 INFO [main][DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
[transaction-service][53060] 2022-07-09 17:55:26,807 INFO [main][DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
[transaction-service][53060] 2022-07-09 17:55:27,068 INFO [main][DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
[transaction-service][53060] 2022-07-09 17:55:27,069 INFO [main][DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
[transaction-service][53060] 2022-07-09 17:55:27,452 INFO [main][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[transaction-service][53060] 2022-07-09 17:55:28,118 INFO [main][DiscoveryClient.java:958] - Disable delta property : false
[transaction-service][53060] 2022-07-09 17:55:28,119 INFO [main][DiscoveryClient.java:959] - Single vip registry refresh property : null
[transaction-service][53060] 2022-07-09 17:55:28,119 INFO [main][DiscoveryClient.java:960] - Force full registry fetch : false
[transaction-service][53060] 2022-07-09 17:55:28,119 INFO [main][DiscoveryClient.java:961] - Application is null : false
[transaction-service][53060] 2022-07-09 17:55:28,119 INFO [main][DiscoveryClient.java:962] - Registered Applications size is zero : true
[transaction-service][53060] 2022-07-09 17:55:28,119 INFO [main][DiscoveryClient.java:964] - Application version is -1: true
[transaction-service][53060] 2022-07-09 17:55:28,120 INFO [main][DiscoveryClient.java:1047] - Getting all instance registry info from the eureka server
[transaction-service][53060] 2022-07-09 17:55:28,398 INFO [main][DiscoveryClient.java:1056] - The response status is 200
[transaction-service][53060] 2022-07-09 17:55:28,404 INFO [main][DiscoveryClient.java:1270] - Starting heartbeat executor: renew interval is: 30
[transaction-service][53060] 2022-07-09 17:55:28,409 INFO [main][InstanceInfoReplicator.java:60] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[transaction-service][53060] 2022-07-09 17:55:28,415 INFO [main][DiscoveryClient.java:449] - Discovery Client initialized at timestamp 1657360528413 with initial instances count: 8
[transaction-service][53060] 2022-07-09 17:55:28,417 INFO [main][EurekaServiceRegistry.java:42] - Registering application TRANSACTION-SERVICE with eureka with status UP
[transaction-service][53060] 2022-07-09 17:55:28,418 INFO [main][DiscoveryClient.java:1305] - Saw local status change event StatusChangeEvent [timestamp=1657360528418, current=UP, previous=STARTING]
[transaction-service][53060] 2022-07-09 17:55:28,420 INFO [main][DocumentationPluginsBootstrapper.java:160] - Context refreshed
[transaction-service][53060] 2022-07-09 17:55:28,423 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:192.168.1.4:53060: registering service...
[transaction-service][53060] 2022-07-09 17:55:28,443 INFO [main][DocumentationPluginsBootstrapper.java:163] - Found 1 custom documentation plugin(s)
[transaction-service][53060] 2022-07-09 17:55:28,494 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_TRANSACTION-SERVICE/transaction-service:192.168.1.4:53060 - registration status: 204
[transaction-service][53060] 2022-07-09 17:55:28,495 INFO [main][ApiListingReferenceScanner.java:41] - Scanning for api listing references
[transaction-service][53060] 2022-07-09 17:55:28,656 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: handleUsingGET_1
[transaction-service][53060] 2022-07-09 17:55:28,658 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: handleUsingGET_2
[transaction-service][53060] 2022-07-09 17:55:28,661 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: handleUsingGET_3
[transaction-service][53060] 2022-07-09 17:55:28,767 INFO [main][CachingOperationNameGenerator.java:40] - Generating unique operation named: queryProjectsUsingPOST_1
[transaction-service][53060] 2022-07-09 17:55:28,831 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-53060"]
[transaction-service][53060] 2022-07-09 17:55:28,866 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 53060 (http) with context path '/transaction'
[transaction-service][53060] 2022-07-09 17:55:28,868 INFO [main][EurekaAutoServiceRegistration.java:141] - Updating port to 53060
[transaction-service][53060] 2022-07-09 17:55:28,871 INFO [main][StartupInfoLogger.java:59] - Started TransactionService in 39.55 seconds (JVM running for 45.743)
[transaction-service][53060] 2022-07-09 17:55:30,611 INFO [RMI TCP Connection(1)-172.26.144.1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-09 17:55:30,612 INFO [RMI TCP Connection(1)-172.26.144.1][SQLLogger.java:89] - Logic SQL: /* ping */ SELECT 1
[transaction-service][53060] 2022-07-09 17:55:30,612 INFO [RMI TCP Connection(1)-172.26.144.1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[], parametersIndex=0, logicSQL=/* ping */ SELECT 1)), containStar=false, firstSelectItemStartIndex=18, selectListStopIndex=18, groupByLastIndex=0, items=[CommonSelectItem(expression=1, alias=Optional.absent())], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-09 17:55:30,613 INFO [RMI TCP Connection(1)-172.26.144.1][SQLLogger.java:89] - Actual SQL: ds0 ::: /* ping */ SELECT 1
[transaction-service][53060] 2022-07-09 17:55:31,402 INFO [RMI TCP Connection(3)-172.26.144.1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[transaction-service][53060] 2022-07-09 17:55:31,402 INFO [RMI TCP Connection(3)-172.26.144.1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[transaction-service][53060] 2022-07-09 17:55:31,417 INFO [RMI TCP Connection(3)-172.26.144.1][FrameworkServlet.java:546] - Completed initialization in 14 ms
[transaction-service][53060] 2022-07-09 17:55:45,937 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:55:47,573 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:56:15,907 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:56:17,567 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:56:45,931 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:56:47,575 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:56:51,363 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ? 
[transaction-service][53060] 2022-07-09 17:56:51,380 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: COLLECTING(String)
[transaction-service][53060] 2022-07-09 17:56:51,443 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-09 17:56:51,443 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?
[transaction-service][53060] 2022-07-09 17:56:51,444 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=1, logicSQL=SELECT COUNT(1) FROM project WHERE PROJECT_STATUS = ?)), containStar=false, firstSelectItemStartIndex=7, selectListStopIndex=14, groupByLastIndex=0, items=[AggregationSelectItem(type=COUNT, innerExpression=(1), alias=Optional.absent(), derivedAggregationSelectItems=[], index=-1)], groupByItems=[], orderByItems=[], limit=null, subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-09 17:56:51,444 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-07-09 17:56:51,444 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-07-09 17:56:51,445 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_0 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-07-09 17:56:51,445 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT COUNT(1) FROM project_1 WHERE PROJECT_STATUS = ? ::: [COLLECTING]
[transaction-service][53060] 2022-07-09 17:56:51,557 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==>  Preparing: SELECT ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO FROM project WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? 
[transaction-service][53060] 2022-07-09 17:56:51,572 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - ==> Parameters: COLLECTING(String), 0(Long), 10(Long)
[transaction-service][53060] 2022-07-09 17:56:51,632 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Rule Type: sharding
[transaction-service][53060] 2022-07-09 17:56:51,633 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Logic SQL: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?
[transaction-service][53060] 2022-07-09 17:56:51,634 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - SQLStatement: SelectStatement(super=DQLStatement(super=AbstractSQLStatement(type=DQL, tables=Tables(tables=[Table(name=project, alias=Optional.absent())]), routeConditions=Conditions(orCondition=OrCondition(andConditions=[])), encryptConditions=Conditions(orCondition=OrCondition(andConditions=[])), sqlTokens=[TableToken(tableName=project, quoteCharacter=NONE, schemaNameLength=0)], parametersIndex=3, logicSQL=SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,?)), containStar=false, firstSelectItemStartIndex=8, selectListStopIndex=205, groupByLastIndex=0, items=[CommonSelectItem(expression=ID, alias=Optional.absent()), CommonSelectItem(expression=CONSUMER_ID, alias=Optional.absent()), CommonSelectItem(expression=USER_NO, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_NO, alias=Optional.absent()), CommonSelectItem(expression=NAME, alias=Optional.absent()), CommonSelectItem(expression=DESCRIPTION, alias=Optional.absent()), CommonSelectItem(expression=TYPE, alias=Optional.absent()), CommonSelectItem(expression=PERIOD, alias=Optional.absent()), CommonSelectItem(expression=ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=BORROWER_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=COMMISSION_ANNUAL_RATE, alias=Optional.absent()), CommonSelectItem(expression=REPAYMENT_WAY, alias=Optional.absent()), CommonSelectItem(expression=AMOUNT, alias=Optional.absent()), CommonSelectItem(expression=PROJECT_STATUS, alias=Optional.absent()), CommonSelectItem(expression=CREATE_DATE, alias=Optional.absent()), CommonSelectItem(expression=STATUS, alias=Optional.absent()), CommonSelectItem(expression=IS_ASSIGNMENT, alias=Optional.absent()), CommonSelectItem(expression=REQUEST_NO, alias=Optional.absent())], groupByItems=[], orderByItems=[OrderItem(owner=Optional.absent(), name=Optional.of(CREATE_DATE), orderDirection=DESC, nullOrderDirection=ASC, index=-1, expression=null, alias=Optional.absent())], limit=Limit(offset=LimitValue(value=-1, index=1, boundOpened=false), rowCount=LimitValue(value=-1, index=2, boundOpened=false)), subqueryStatement=null, subqueryStatements=[], subqueryConditions=[])
[transaction-service][53060] 2022-07-09 17:56:51,635 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-07-09 17:56:51,635 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds0 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-07-09 17:56:51,636 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_0 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-07-09 17:56:51,636 INFO [http-nio-53060-exec-1][SQLLogger.java:89] - Actual SQL: ds1 ::: SELECT  ID,CONSUMER_ID,USER_NO,PROJECT_NO,NAME,DESCRIPTION,TYPE,PERIOD,ANNUAL_RATE,BORROWER_ANNUAL_RATE,COMMISSION_ANNUAL_RATE,REPAYMENT_WAY,AMOUNT,PROJECT_STATUS,CREATE_DATE,STATUS,IS_ASSIGNMENT,REQUEST_NO  FROM project_1 
 
 WHERE PROJECT_STATUS = ? ORDER BY CREATE_DATE DESC LIMIT ?,? ::: [COLLECTING, 0, 10]
[transaction-service][53060] 2022-07-09 17:56:51,671 DEBUG [http-nio-53060-exec-1][BaseJdbcLogger.java:159] - <==      Total: 6
[transaction-service][53060] 2022-07-09 17:57:15,911 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:57:17,569 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:57:45,923 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:57:47,564 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:58:15,921 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:58:17,572 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:58:45,936 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:58:47,561 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:59:15,913 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:59:17,585 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:59:45,940 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[transaction-service][53060] 2022-07-09 17:59:47,605 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
